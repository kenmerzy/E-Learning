{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ngoclong/ReactJS/e-learning/src/components/Account/RechargeModal/RechargeModal.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport styles from './RechargeModal.module.scss';\nimport ModalComponent from '../ModalComponent/ModalComponent';\nimport LoadingComponent from '../../Loading/LoadingComponent';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport { coursesAction } from '../../../redux/actions';\n\nconst RechargeModal = props => {\n  _s();\n\n  const {\n    onCloseModalClick,\n    loadingLabel\n  } = props;\n  const token = useSelector(value => {\n    var _value$userReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$userReducer = value.userReducer) === null || _value$userReducer === void 0 ? void 0 : _value$userReducer.token;\n  });\n  const [isModalShow, setIsModalShow] = useState('');\n  const [textModal, setTextModal] = useState('');\n  const [typeModal, setTypeModal] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalComponentCloseClick = () => {\n    setIsModalShow(false);\n  };\n\n  const handlePositiveButtonClick = () => {\n    setIsLoading(true);\n    setTypeModal('fail');\n    setTextModal('sdsds');\n    setIsModalShow(true);\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [isModalShow && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      centered: true,\n      backdrop: true,\n      bsPrefix: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(ModalComponent, {\n        textModal: textModal,\n        handleModalComponentCloseClick: handleModalComponentCloseClick,\n        type: typeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coverT,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.title,\n        children: \"Recharge information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingComponent, {\n        label: loadingLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divButton,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonConfirm,\n          onClick: handlePositiveButtonClick,\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Recharge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.buttonClose,\n        type: \"button\",\n        onClick: onCloseModalClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteIcon,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RechargeModal, \"4FDVgFGMljz0kjmDWLQ64glqGw0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RechargeModal;\nexport default RechargeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RechargeModal\");","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/components/Account/RechargeModal/RechargeModal.js"],"names":["React","useState","useDispatch","useSelector","Modal","styles","ModalComponent","LoadingComponent","coursesAction","RechargeModal","props","onCloseModalClick","loadingLabel","token","value","userReducer","isModalShow","setIsModalShow","textModal","setTextModal","typeModal","setTypeModal","isLoading","setIsLoading","dispatch","handleModalComponentCloseClick","handlePositiveButtonClick","container","coverT","title","divButton","buttonConfirm","buttonClose","deleteIcon"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Modal from 'react-bootstrap/Modal'\nimport styles from './RechargeModal.module.scss'\nimport ModalComponent from '../ModalComponent/ModalComponent'\nimport LoadingComponent from '../../Loading/LoadingComponent'\nimport deleteIcon from '../../../assets/images/delete.svg'\nimport { coursesAction } from '../../../redux/actions'\n\nconst RechargeModal = (props) => {\n  const {\n    onCloseModalClick,\n    loadingLabel,\n\n  } = props\n  const token = useSelector((value) => value?.userReducer?.token)\n  const [isModalShow, setIsModalShow] = useState('')\n  const [textModal, setTextModal] = useState('')\n  const [typeModal, setTypeModal] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  const dispatch = useDispatch()\n  const handleModalComponentCloseClick = () => {\n    setIsModalShow(false)\n  }\n  const handlePositiveButtonClick = () => {\n    setIsLoading(true)\n    setTypeModal('fail')\n    setTextModal('sdsds')\n    setIsModalShow(true)\n    setIsLoading(false)\n  }\n  return (\n    <div className={styles.container}>\n      {isModalShow && <Modal\n        show\n        centered\n        backdrop\n        bsPrefix=\"modal\"\n      >\n        <ModalComponent\n          textModal={textModal}\n          handleModalComponentCloseClick={handleModalComponentCloseClick}\n          type={typeModal}\n        />\n      </Modal>}\n      <div className={styles.coverT}>\n        <p className={styles.title}>Recharge information</p>\n\n        {isLoading && <LoadingComponent label={loadingLabel} />}\n        {!isLoading && <div className={styles.divButton}>\n\n          <button\n            className={styles.buttonConfirm}\n            onClick={handlePositiveButtonClick}\n            type=\"button\"\n          >\n            <p>Recharge</p>\n          </button>\n        </div>}\n        <button\n          className={styles.buttonClose}\n          type=\"button\"\n          onClick={onCloseModalClick}\n        >\n          <img\n            src={deleteIcon}\n            alt=\"logo\"\n          />\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default RechargeModal\n"]},"metadata":{},"sourceType":"module"}