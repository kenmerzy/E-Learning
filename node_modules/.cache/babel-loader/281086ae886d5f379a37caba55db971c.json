{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { coursesTypes } from '../types';\nimport { API_URL } from '../../configs'; // watcher saga: watches for actions dispatched to the store, starts worker saga\n\nfunction* getAllCourse(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n\n  try {\n    var _response$data;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/`));\n    yield put({\n      type: coursesTypes.GET_ALL_COURSE_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}\n\nfunction* getAllCategory(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n\n  try {\n    var _response$data2;\n\n    const response = yield call(() => axios.post(`${API_URL}/loaikhoahoc/`));\n    yield put({\n      type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response2;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}\n\nfunction* getAllAuthor(action) {\n  const {\n    data\n  } = action.payload;\n\n  try {\n    var _response$data3;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/author/`));\n    yield put({\n      type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data\n      }\n    }); // callback(response?.data)\n  } catch (error) {\n    var _error$response3;\n\n    console.log(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n  }\n}\n\nfunction* getUploadedVideos(action) {\n  const {\n    data\n  } = action.payload;\n  const {\n    token\n  } = data;\n\n  try {\n    var _response$data4;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/uploaded`, {\n      token\n    }));\n    yield put({\n      type: coursesTypes.GET_UPLOADED_VIDEOS_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data\n      }\n    });\n  } catch (error) {\n    var _error$response4;\n\n    console.log(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n}\n\nexport default function* courseSagas() {\n  yield takeLatest(coursesTypes.GET_ALL_COURSE, getAllCourse);\n  yield takeLatest(coursesTypes.GET_ALL_CATEGORY, getAllCategory);\n  yield takeLatest(coursesTypes.GET_ALL_AUTHOR, getAllAuthor);\n  yield takeLatest(coursesTypes.GET_UPLOADED_VIDEOS, getUploadedVideos);\n}","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/courses.js"],"names":["takeLatest","call","put","axios","coursesTypes","API_URL","getAllCourse","action","data","callback","payload","response","post","type","GET_ALL_COURSE_SUCCESS","error","getAllCategory","GET_ALL_CATEGORY_SUCCESS","getAllAuthor","GET_ALL_AUTHOR_SUCCESS","console","log","getUploadedVideos","token","GET_UPLOADED_VIDEOS_SUCCESS","courseSagas","GET_ALL_COURSE","GET_ALL_CATEGORY","GET_ALL_AUTHOR","GET_UPLOADED_VIDEOS"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { coursesTypes } from '../types'\nimport { API_URL } from '../../configs'\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nfunction* getAllCourse(action) {\n  const { data, callback } = action.payload\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/`)\n    )\n    yield put({\n      type: coursesTypes.GET_ALL_COURSE_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* getAllCategory(action) {\n  const { data, callback } = action.payload\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/loaikhoahoc/`)\n    )\n    yield put({\n      type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* getAllAuthor(action) {\n  const { data } = action.payload\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/author/`)\n    )\n    yield put({\n      type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    // callback(response?.data)\n  } catch (error) {\n    console.log(error?.response?.data)\n  }\n}\n\nfunction* getUploadedVideos(action) {\n  const { data } = action.payload\n  const { token } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/uploaded`, {\n        token,\n      })\n    )\n    yield put({\n      type: coursesTypes.GET_UPLOADED_VIDEOS_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n  } catch (error) {\n    console.log(error?.response?.data)\n  }\n}\n\nexport default function* courseSagas() {\n  yield takeLatest(coursesTypes.GET_ALL_COURSE, getAllCourse)\n  yield takeLatest(coursesTypes.GET_ALL_CATEGORY, getAllCategory)\n  yield takeLatest(coursesTypes.GET_ALL_AUTHOR, getAllAuthor)\n  yield takeLatest(coursesTypes.GET_UPLOADED_VIDEOS, getUploadedVideos)\n}\n"]},"metadata":{},"sourceType":"module"}