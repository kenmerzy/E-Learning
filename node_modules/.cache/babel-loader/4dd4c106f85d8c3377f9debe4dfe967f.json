{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { userType } from '../types';\nimport { API_URL } from '../../configs'; // watcher saga: watches for actions dispatched to the store, starts worker saga\n\nconst proxyurl = 'https://cors-anywhere.herokuapp.com/';\n\nfunction* loginUser(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    sdt,\n    password\n  } = data;\n\n  try {\n    const response = yield call(() => axios.post(`${API_URL}/auth/login`, {\n      sdt,\n      password\n    }));\n    console.log('===============================================');\n    console.log('response', response);\n    console.log('==============================================='); // yield put({\n    //   type: userType.LOGIN_SUCCESS,\n    //   payload: { data: response?.data?.data },\n    // })\n    // callback(response?.data)\n  } catch (error) {// callback(error?.response?.data)\n  }\n}\n\nexport default function* userSagas() {\n  yield takeLatest(userType.LOGIN, loginUser);\n}","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/user.js"],"names":["takeLatest","call","put","axios","userType","API_URL","proxyurl","loginUser","action","data","callback","payload","sdt","password","response","post","console","log","error","userSagas","LOGIN"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,sCAAjB;;AACA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,MAAM,CAACG,OAAlC;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBJ,IAA1B;;AAEA,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMb,IAAI,CACzB,MAAME,KAAK,CAACY,IAAN,CAAY,GAAEV,OAAQ,aAAtB,EAAoC;AACxCO,MAAAA,GADwC;AAExCC,MAAAA;AAFwC,KAApC,CADmB,CAA3B;AAMAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ,EATE,CAUF;AACA;AACA;AACA;AACA;AACD,GAfD,CAeE,OAAOC,KAAP,EAAc,CACd;AACD;AACF;;AACD,eAAe,UAAUC,SAAV,GAAsB;AACnC,QAAMnB,UAAU,CAACI,QAAQ,CAACgB,KAAV,EAAiBb,SAAjB,CAAhB;AACD","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { userType } from '../types'\nimport { API_URL } from '../../configs'\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nconst proxyurl = 'https://cors-anywhere.herokuapp.com/'\nfunction* loginUser(action) {\n  const { data, callback } = action.payload\n  const { sdt, password } = data\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/login`, {\n        sdt,\n        password,\n      })\n    )\n    console.log('===============================================')\n    console.log('response', response)\n    console.log('===============================================')\n    // yield put({\n    //   type: userType.LOGIN_SUCCESS,\n    //   payload: { data: response?.data?.data },\n    // })\n    // callback(response?.data)\n  } catch (error) {\n    // callback(error?.response?.data)\n  }\n}\nexport default function* userSagas() {\n  yield takeLatest(userType.LOGIN, loginUser)\n}\n"]},"metadata":{},"sourceType":"module"}