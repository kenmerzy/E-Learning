{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { coursesTypes } from '../types';\nimport { API_URL } from '../../configs'; // watcher saga: watches for actions dispatched to the store, starts worker saga\n\nfunction* getAllCourse(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n\n  try {\n    var _response$data;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/`));\n    yield put({\n      type: coursesTypes.GET_ALL_COURSE_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}\n\nexport default function* userSagas() {\n  yield takeLatest(coursesTypes.GET_ALL_COURSE, getAllCourse);\n}","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/courses.js"],"names":["takeLatest","call","put","axios","coursesTypes","API_URL","getAllCourse","action","data","callback","payload","response","post","type","GET_ALL_COURSE_SUCCESS","error","userSagas","GET_ALL_COURSE"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,UAAUC,YAAV,CAAuBC,MAAvB,EAA+B;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,MAAM,CAACG,OAAlC;;AAEA,MAAI;AAAA;;AACF,UAAMC,QAAQ,GAAG,MAAMV,IAAI,CACzB,MAAME,KAAK,CAACS,IAAN,CAAY,GAAEP,OAAQ,WAAtB,CADmB,CAA3B;AAGA,UAAMH,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAET,YAAY,CAACU,sBADX;AAERJ,MAAAA,OAAO,EAAE;AAAEF,QAAAA,IAAI,EAAEG,QAAF,aAAEA,QAAF,yCAAEA,QAAQ,CAAEH,IAAZ,mDAAE,eAAgBA;AAAxB;AAFD,KAAD,CAAT;AAIAC,IAAAA,QAAQ,CAACE,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEH,IAAX,CAAR;AACD,GATD,CASE,OAAOO,KAAP,EAAc;AAAA;;AACdN,IAAAA,QAAQ,CAACM,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEJ,QAAR,oDAAC,gBAAiBH,IAAlB,CAAR;AACD;AACF;;AAED,eAAe,UAAUQ,SAAV,GAAsB;AACnC,QAAMhB,UAAU,CAACI,YAAY,CAACa,cAAd,EAA8BX,YAA9B,CAAhB;AACD","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { coursesTypes } from '../types'\nimport { API_URL } from '../../configs'\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nfunction* getAllCourse(action) {\n  const { data, callback } = action.payload\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/`)\n    )\n    yield put({\n      type: coursesTypes.GET_ALL_COURSE_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\n\nexport default function* userSagas() {\n  yield takeLatest(coursesTypes.GET_ALL_COURSE, getAllCourse)\n}\n"]},"metadata":{},"sourceType":"module"}