{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { adminTypes } from '../types';\nimport { API_URL } from '../../configs';\nexport default function* adminSagas() {\n  yield takeLatest(adminTypes.CENSOR_COURSES, censorCourses);\n}\n\nfunction* censorCourses(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    maKH,\n    token\n  } = data;\n  console.log('===============================================');\n  console.log('saga censorCourses');\n  console.log('===============================================');\n\n  try {\n    var _response$data;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/verify`, {\n      maKH,\n      token\n    }));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.success) {\n      yield put({\n        type: admin\n      });\n    }\n\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/admin.js"],"names":["takeLatest","call","put","axios","adminTypes","API_URL","adminSagas","CENSOR_COURSES","censorCourses","action","data","callback","payload","maKH","token","console","log","response","post","success","type","admin","error"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,eAAe,UAAUC,UAAV,GAAuB;AACpC,QAAMN,UAAU,CAACI,UAAU,CAACG,cAAZ,EAA4BC,aAA5B,CAAhB;AACD;;AACD,UAAUA,aAAV,CAAwBC,MAAxB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,MAAM,CAACG,OAAlC;AACA,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA;AAFI,MAGFJ,IAHJ;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;;AACA,MAAI;AAAA;;AACF,UAAMC,QAAQ,GAAG,MAAMhB,IAAI,CACzB,MAAME,KAAK,CAACe,IAAN,CAAY,GAAEb,OAAQ,iBAAtB,EAAwC;AAC5CQ,MAAAA,IAD4C;AAE5CC,MAAAA;AAF4C,KAAxC,CADmB,CAA3B;;AAMA,QAAIG,QAAJ,aAAIA,QAAJ,yCAAIA,QAAQ,CAAEP,IAAd,mDAAI,eAAgBS,OAApB,EAA6B;AAC3B,YAAMjB,GAAG,CAAC;AAAEkB,QAAAA,IAAI,EAAEC;AAAR,OAAD,CAAT;AACD;;AAEDV,IAAAA,QAAQ,CAACM,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEP,IAAX,CAAR;AACD,GAZD,CAYE,OAAOY,KAAP,EAAc;AAAA;;AACdX,IAAAA,QAAQ,CAACW,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEL,QAAR,oDAAC,gBAAiBP,IAAlB,CAAR;AACD;AACF","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { adminTypes } from '../types'\nimport { API_URL } from '../../configs'\n\nexport default function* adminSagas() {\n  yield takeLatest(adminTypes.CENSOR_COURSES, censorCourses)\n}\nfunction* censorCourses(action) {\n  const { data, callback } = action.payload\n  const {\n    maKH,\n    token,\n  } = data\n  console.log('===============================================')\n  console.log('saga censorCourses')\n  console.log('===============================================')\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/verify`, {\n        maKH,\n        token,\n      })\n    )\n    if (response?.data?.success) {\n      yield put({ type: admin })\n    }\n\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}