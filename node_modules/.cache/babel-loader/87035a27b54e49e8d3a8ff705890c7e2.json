{"ast":null,"code":"import { h, r as registerInstance, c as createEvent, H as Host } from './index-d90c08e5.js';\n\n(function closest() {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      let el = this;\n\n      do {\n        if (Element.prototype.matches.call(el, s)) {\n          return el;\n        }\n\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n\n      return null;\n    };\n  }\n})();\n\nconst UUID = 'uuid';\n\nfunction getItemLabel(item, dataLabel) {\n  return dataLabel ? item[dataLabel] : item;\n}\n\nfunction getItemValue(item, dataId) {\n  return dataId ? item[dataId] : item;\n}\n\nfunction doFilter(p, val) {\n  var _a;\n\n  let newSource = [];\n  const filterValue = (_a = val === null || val === void 0 ? void 0 : val.trim()) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase();\n\n  if (!filterValue) {\n    newSource = p.source;\n  } else {\n    for (let item of p.source) {\n      let val = getItemLabel(item, p.dataLabel);\n\n      if (typeof val === 'string') {\n        val = val.toLocaleLowerCase();\n\n        switch (p.filter) {\n          case 'start':\n            if (val.indexOf(filterValue) === 0) {\n              newSource.push(item);\n            }\n\n            break;\n\n          default:\n            if (val.indexOf(filterValue) > -1) {\n              newSource.push(item);\n            }\n\n            break;\n        }\n      }\n    }\n  }\n\n  return newSource;\n}\n\nconst DropdownListFilter = p => {\n  const filterChange = value => {\n    const items = doFilter(p, value);\n    p.onFilterChange({\n      value,\n      items\n    });\n  };\n\n  if (!p.filter) {\n    p.filter = 'contains';\n  }\n\n  filterChange(p.filterValue);\n\n  if (p.autocomplete) {\n    p.value = p.filterValue;\n  }\n\n  return h(\"input\", Object.assign({\n    class: {\n      'filter-box': true\n    },\n    type: \"text\"\n  }, p, {\n    onClick: e => {\n      e.preventDefault();\n      p.onClick && p.onClick(e);\n    },\n    onInput: e => {\n      var _a;\n\n      p.onInput && p.onInput();\n      const value = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.value;\n      filterChange(value);\n    }\n  }));\n};\n\nconst ArrowRenderer = () => {\n  return h(\"span\", {\n    class: \"arrow-wrapper\"\n  }, h(\"svg\", {\n    class: \"arrow\",\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    role: \"img\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 320 512\"\n  }, h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\"\n  })));\n};\n\nconst revoDropdownStyleCss = \"revo-dropdown{font-size:1em;font-family:\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;font-weight:400;line-height:2em;letter-spacing:0.01em;display:inline-flex;flex-direction:column;vertical-align:top;padding:0;box-sizing:border-box;cursor:pointer;position:relative}revo-dropdown .rv-dr-root{padding:5px 9px;padding-right:35px;flex-wrap:wrap;position:relative;border-radius:4px;cursor:text;display:inline-flex;position:relative;font-size:1rem;box-sizing:border-box;align-items:center}revo-dropdown input.filter-box{padding-left:6px;padding:9.5px 4px;width:0;min-width:30px;flex-grow:1;text-overflow:ellipsis;border:0;height:1.1876em;margin:0;display:block;background:none;box-sizing:content-box;letter-spacing:inherit;animation-duration:10ms}revo-dropdown input.filter-box:focus{outline:none}revo-dropdown .actions{right:9px;top:calc(50% - $font-size);position:absolute}revo-dropdown label{font-size:1rem;z-index:1;top:0;left:0;position:absolute;display:block;transform-origin:top left;line-height:1;transition:color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms, transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;transform:translate(14px, 14px) scale(1);pointer-events:none}revo-dropdown fieldset{border-color:#ececec;top:-5px;left:0;right:0;bottom:0;margin:0;padding:0 8px;overflow:hidden;position:absolute;border-style:solid;border-width:1px;border-radius:inherit;pointer-events:none}revo-dropdown fieldset legend{width:auto;height:11px;display:block;padding:0;font-size:0.75em;max-width:0.01px;text-align:left;transition:max-width 50ms cubic-bezier(0, 0, 0.2, 1) 0ms;visibility:hidden}revo-dropdown fieldset legend>span{display:inline-block;padding-left:5px;padding-right:5px}revo-dropdown.shrink label{transform:translate(14px, -6px) scale(0.75)}revo-dropdown.shrink legend{max-width:1000px;transition:max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms}revo-dropdown .arrow{width:9px;margin-top:5px;margin-left:5px;opacity:0.4}revo-dropdown .arrow-wrapper{width:15px;text-align:center}revo-dropdown.active label{color:#0089ff}revo-dropdown.active fieldset{border-color:#0089ff}.revo-dropdown-list{font-size:1em;font-family:\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;font-weight:400;line-height:2em;letter-spacing:0.01em;position:absolute;transition:opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 160ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;z-index:999}.revo-dropdown-list.top .dropdown-inner{bottom:2px;flex-direction:column-reverse}.revo-dropdown-list.top .dropdown-inner .filter-box{margin-bottom:0}.revo-dropdown-list:not(.top) .dropdown-inner{top:2px;flex-direction:column}.revo-dropdown-list:not(.top) .dropdown-inner .filter-box{margin-top:0}.revo-dropdown-list .dropdown-inner{display:flex;max-height:100%;position:absolute;padding:8px 0;box-sizing:border-box;min-height:16px;min-width:16px;box-shadow:0 0 14px 0 rgba(53, 64, 82, 0.05);border:1px solid rgba(0, 0, 0, 0.05);border-radius:4px;color:rgba(0, 0, 0, 0.87);overflow:hidden;background-color:#fff}.revo-dropdown-list .dropdown-inner .filter-box{border:1px solid #ececec;min-height:30px;line-height:30px;margin:10px;border-radius:6px}.revo-dropdown-list .dropdown-inner .filter-box:focus{outline:none;border-color:#0089ff}\";\nconst RevoDropdown = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.changeValue = createEvent(this, \"changeValue\", 7);\n    this.close = createEvent(this, \"close\", 7);\n    this.open = createEvent(this, \"open\", 7);\n    this.uuid = '';\n    this.isClosing = false;\n    this.currentItem = null;\n    this.isVisible = false;\n    /**\n     * Should dropdown autoclose on changeValue\n     */\n\n    this.autoClose = true;\n    /**\n     * Define object mapping for id/value\n     */\n\n    this.source = [];\n    /**\n     * Placeholder text\n     */\n\n    this.placeholder = 'Select';\n    /**\n     * Where to append element\n     */\n\n    this.appendTo = 'body';\n    this.hasFilter = true;\n    this.autocomplete = false;\n    this.autoFocus = false;\n  } // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Close dropdown\n   */\n\n\n  async doClose(isDisconnected = false) {\n    if (!isDisconnected) {\n      const event = this.close.emit();\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    this.isClosing = true;\n    this.isVisible = false;\n  }\n  /**\n   * Open dropdown\n   */\n\n\n  async doOpen() {\n    const event = this.open.emit();\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.isVisible = true;\n  }\n  /**\n   * Change value\n   */\n\n\n  async doChange(val, originalEvent) {\n    this.value = val;\n    this.changeValue.emit({\n      val,\n      originalEvent\n    });\n\n    if (this.autocompleteInput) {\n      this.autocompleteInput.value = getItemLabel(this.currentItem, this.dataLabel);\n    }\n\n    if (this.autoClose && this.isVisible) {\n      this.doClose();\n    }\n  } // --------------------------------------------------------------------------\n  //\n  //  Internal\n  //\n  // --------------------------------------------------------------------------\n\n  /** Action finished */\n\n\n  onMouseUp(e) {\n    var _a;\n\n    if (this.isVisible && !e.defaultPrevented) {\n      const isOutside = !((_a = e.target) === null || _a === void 0 ? void 0 : _a.closest(`[${UUID}=\"${this.uuid}\"]`));\n\n      if (isOutside) {\n        this.doClose();\n      }\n    }\n  }\n\n  onKey(e) {\n    switch (e.code) {\n      case 'Escape':\n        e.preventDefault();\n        this.doClose();\n        break;\n    }\n  }\n\n  onValueChanged(newVal) {\n    this.currentItem = this.getValue(newVal);\n  }\n\n  componentWillLoad() {\n    if (this.value) {\n      this.currentItem = this.value;\n    }\n  }\n\n  connectedCallback() {\n    this.uuid = `${new Date().getTime()}-rvdropdown`;\n\n    if (typeof this.value !== 'undefined') {\n      this.onValueChanged(this.value);\n    }\n  }\n\n  disconnectedCallback() {\n    this.doClose(true);\n  }\n\n  componentDidRender() {\n    if (this.dropdown && this.appendTo === 'body') {\n      document.body.appendChild(this.dropdown);\n    }\n\n    if (this.isVisible) {\n      this.updateStyles();\n    }\n\n    if (this.dropdownInput) {\n      this.dropdownInput.focus();\n    }\n\n    if (this.autoFocus) {\n      if (this.autocomplete) {\n        setTimeout(() => {\n          var _a;\n\n          return (_a = this.autocompleteInput) === null || _a === void 0 ? void 0 : _a.focus();\n        }, 0);\n      }\n    }\n  }\n\n  renderDropdown() {\n    return h(\"div\", Object.assign({}, {\n      [UUID]: this.uuid\n    }, {\n      class: \"revo-dropdown-list\",\n      ref: e => this.dropdown = e\n    }), h(\"div\", {\n      class: \"dropdown-inner\",\n      ref: e => this.dropdownInner = e\n    }, this.hasFilter && !this.autocomplete ? h(DropdownListFilter, {\n      ref: e => this.dropdownInput = e,\n      source: this.source,\n      filter: this.filter,\n      dataLabel: this.dataLabel,\n      value: this.currentFilter || '',\n      filterValue: this.currentFilter || '',\n      onFilterChange: e => {\n        var _a;\n\n        this.currentFilter = e.value;\n        this.currentSource = e.items;\n        (_a = this.revoList) === null || _a === void 0 ? void 0 : _a.refresh(this.currentSource);\n      }\n    }) : undefined, h(\"revo-list\", {\n      ref: e => this.revoList = e,\n      isFocused: true,\n      sourceItems: this.currentSource,\n      dataLabel: this.dataLabel,\n      onDoChange: e => this.doChange(e.detail.item, e.detail.e)\n    })));\n  }\n\n  renderSelect() {\n    const val = this.currentItem && getItemLabel(this.currentItem, this.dataLabel) || '';\n    return h(\"input\", {\n      type: \"text\",\n      disabled: true,\n      class: \"filter-box\",\n      value: val\n    });\n  }\n\n  renderAutocomplete() {\n    const val = this.currentItem ? getItemLabel(this.currentItem, this.dataLabel) : '';\n    return h(DropdownListFilter, {\n      ref: e => this.autocompleteInput = e,\n      autocomplete: 'true',\n      source: this.source,\n      filter: this.filter,\n      dataLabel: this.dataLabel,\n      value: val,\n      filterValue: this.currentFilter,\n      onKeyDown: e => {\n        if (this.isVisible) {\n          return;\n        }\n\n        switch (e.code) {\n          case 'ArrowUp':\n          case 'ArrowDown':\n            e.preventDefault();\n            this.showAutoComplete();\n            break;\n        }\n      },\n      onInput: () => this.showAutoComplete(),\n      onFocus: () => this.showAutoComplete(),\n      onClick: () => this.showAutoComplete(),\n      onFilterChange: e => {\n        var _a;\n\n        this.currentFilter = e.value;\n        this.currentSource = e.items;\n        (_a = this.revoList) === null || _a === void 0 ? void 0 : _a.refresh(this.currentSource);\n      }\n    });\n  }\n\n  render() {\n    var _a;\n\n    let list;\n\n    if (this.isVisible) {\n      list = this.renderDropdown();\n    }\n\n    const props = {\n      [UUID]: this.uuid,\n      class: {\n        active: this.isVisible,\n        shrink: this.isVisible || !!this.currentItem || !!((_a = this.autocompleteInput) === null || _a === void 0 ? void 0 : _a.value)\n      },\n      ref: e => this.element = e,\n      onClick: e => this.selectClick(e)\n    };\n\n    if (this.autocomplete) {\n      props['autocomplete'] = true;\n    }\n\n    return h(Host, Object.assign({}, props), h(\"label\", null, this.placeholder), h(\"div\", {\n      class: \"rv-dr-root\"\n    }, this.autocomplete ? this.renderAutocomplete() : this.renderSelect(), h(\"span\", {\n      class: \"actions\"\n    }, h(ArrowRenderer, null)), h(\"fieldset\", null, h(\"legend\", null, h(\"span\", null, this.placeholder)))), list);\n  }\n\n  showAutoComplete() {\n    if (!this.isVisible && !this.isClosing) {\n      this.isVisible = true;\n    }\n\n    this.isClosing = false;\n  }\n\n  getValue(newVal) {\n    for (let index in this.source) {\n      const item = this.source[index];\n\n      if (newVal == getItemValue(item, this.dataId)) {\n        return item;\n      }\n    }\n\n    return null;\n  }\n\n  selectClick(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (this.isVisible) {\n      this.doClose();\n    } else {\n      this.doOpen();\n    }\n  }\n\n  updateStyles() {\n    if (!this.dropdown) {\n      return;\n    }\n\n    const {\n      top,\n      left,\n      height\n    } = this.element.getBoundingClientRect();\n    const visibleRect = this.clientRectangle();\n    let currentTop = top + height + visibleRect.top;\n    const style = {}; // top\n\n    if (currentTop > visibleRect.centerY) {\n      style.top = `${currentTop - height}px`;\n      style.maxHeight = currentTop - height - visibleRect.top - 50;\n      this.dropdown.classList.add('top'); // bottom\n    } else {\n      style.top = `${currentTop}px`;\n      style.maxHeight = visibleRect.bottom - currentTop - 50;\n      this.dropdown.classList.remove('top');\n    } // left\n\n\n    let currentLeft = left + visibleRect.left;\n    const rightSpace = visibleRect.right - (currentLeft + this.dropdown.clientWidth);\n\n    if (rightSpace < 0) {\n      currentLeft += rightSpace;\n    }\n\n    style.left = `${currentLeft}px`;\n    this.dropdownInner.style.maxHeight = `${Math.min(style.maxHeight, this.maxHeight || style.maxHeight)}px`;\n    this.dropdownInner.style.maxWidth = style.maxWidth;\n\n    for (let s in style) {\n      this.dropdown.style[s] = style[s];\n    }\n  }\n\n  clientRectangle() {\n    const rect = {\n      top: window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop,\n      bottom: 0,\n      centerY: 0,\n      height: document.body.clientHeight,\n      left: window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,\n      right: 0,\n      width: document.body.clientWidth,\n      centerX: 0\n    };\n    rect.bottom = rect.top + rect.height;\n    rect.right = rect.left + rect.width;\n    rect.centerY = rect.top + rect.height / 2;\n    rect.centerX = rect.left + rect.width / 2;\n    return rect;\n  }\n\n  static get watchers() {\n    return {\n      \"value\": [\"onValueChanged\"]\n    };\n  }\n\n};\nRevoDropdown.style = revoDropdownStyleCss;\nconst revoListStyleCss = \"revo-list{overflow-x:hidden;overflow-y:auto;max-height:100%;display:block}revo-list ul{margin:0;padding:0;outline:0;list-style:none}revo-list ul>li{width:auto;overflow:hidden;font-size:14px;box-sizing:border-box;min-height:48px;font-weight:400;line-height:1.5;padding-top:6px;white-space:nowrap;padding-bottom:6px;padding-left:16px;padding-right:16px;display:flex;position:relative;text-align:left;align-items:center;justify-content:flex-start;text-decoration:none;cursor:pointer}revo-list ul>li.selected{background-color:rgba(0, 0, 0, 0.04)}revo-list ul>li:hover{background-color:rgba(0, 0, 0, 0.04)}\";\nconst RevoDropdownList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.doChange = createEvent(this, \"doChange\", 3);\n    this.currentItem = 0;\n    /**\n     * Define object mapping for id/value\n     */\n\n    this.sourceItems = [];\n    this.isFocused = false;\n  }\n  /** Recived keyboard down from element */\n\n\n  onKey(e) {\n    let item;\n\n    if (!this.isFocused) {\n      return;\n    }\n\n    switch (e.code) {\n      case 'ArrowUp':\n        e.preventDefault();\n\n        if (this.currentItem <= 0) {\n          return;\n        }\n\n        this.currentItem--;\n        break;\n\n      case 'ArrowDown':\n        e.preventDefault();\n\n        if (this.sourceItems[this.currentItem + 1]) {\n          this.currentItem++;\n        }\n\n        break;\n\n      case 'Tab':\n        e.preventDefault();\n        item = this.sourceItems[this.currentItem];\n\n        if (item) {\n          this.doChange.emit({\n            item: item,\n            e\n          });\n        }\n\n        break;\n\n      case 'Enter':\n        e.preventDefault();\n        item = this.sourceItems[this.currentItem];\n\n        if (item) {\n          this.doChange.emit({\n            item,\n            e\n          });\n        }\n\n        break;\n    }\n  }\n\n  async refresh(source) {\n    this.sourceItems = source;\n  }\n\n  componentDidRender() {\n    var _a;\n\n    (_a = this.selectedEl) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n      block: 'nearest',\n      inline: 'nearest'\n    });\n  }\n\n  render() {\n    this.selectedEl = undefined;\n    const items = [];\n\n    for (let i in this.sourceItems) {\n      const item = this.sourceItems[i];\n      const isSelected = parseInt(i) === this.currentItem;\n      const props = {\n        class: {\n          'selected': isSelected\n        },\n        ref: e => {\n          if (isSelected) {\n            this.selectedEl = e;\n          }\n        },\n        onClick: e => this.doChange.emit({\n          item,\n          e\n        })\n      };\n      const li = h(\"li\", Object.assign({}, props), getItemLabel(item, this.dataLabel));\n      items.push(li);\n    }\n\n    return h(\"ul\", null, items);\n  }\n\n};\nRevoDropdownList.style = revoListStyleCss;\nexport { RevoDropdown as revo_dropdown, RevoDropdownList as revo_list };","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/node_modules/@revolist/revo-dropdown/dist/esm/revo-dropdown_2.entry.js"],"names":["h","r","registerInstance","c","createEvent","H","Host","closest","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","s","el","call","parentElement","parentNode","nodeType","UUID","getItemLabel","item","dataLabel","getItemValue","dataId","doFilter","p","val","_a","newSource","filterValue","trim","toLocaleLowerCase","source","filter","indexOf","push","DropdownListFilter","filterChange","value","items","onFilterChange","autocomplete","Object","assign","class","type","onClick","e","preventDefault","onInput","currentTarget","ArrowRenderer","focusable","role","xmlns","viewBox","fill","d","revoDropdownStyleCss","RevoDropdown","constructor","hostRef","changeValue","close","open","uuid","isClosing","currentItem","isVisible","autoClose","placeholder","appendTo","hasFilter","autoFocus","doClose","isDisconnected","event","emit","defaultPrevented","doOpen","doChange","originalEvent","autocompleteInput","onMouseUp","isOutside","target","onKey","code","onValueChanged","newVal","getValue","componentWillLoad","connectedCallback","Date","getTime","disconnectedCallback","componentDidRender","dropdown","document","body","appendChild","updateStyles","dropdownInput","focus","setTimeout","renderDropdown","ref","dropdownInner","currentFilter","currentSource","revoList","refresh","undefined","isFocused","sourceItems","onDoChange","detail","renderSelect","disabled","renderAutocomplete","onKeyDown","showAutoComplete","onFocus","render","list","props","active","shrink","element","selectClick","index","top","left","height","getBoundingClientRect","visibleRect","clientRectangle","currentTop","style","centerY","maxHeight","classList","add","bottom","remove","currentLeft","rightSpace","right","clientWidth","Math","min","maxWidth","rect","window","pageYOffset","documentElement","scrollTop","clientHeight","pageXOffset","scrollLeft","width","centerX","watchers","revoListStyleCss","RevoDropdownList","selectedEl","scrollIntoView","block","inline","i","isSelected","parseInt","li","revo_dropdown","revo_list"],"mappings":"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","sourcesContent":["import { h, r as registerInstance, c as createEvent, H as Host } from './index-d90c08e5.js';\n\n(function closest() {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches =\n      Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      let el = this;\n      do {\n        if (Element.prototype.matches.call(el, s)) {\n          return el;\n        }\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n      return null;\n    };\n  }\n})();\n\nconst UUID = 'uuid';\n\nfunction getItemLabel(item, dataLabel) {\n  return dataLabel ? item[dataLabel] : item;\n}\nfunction getItemValue(item, dataId) {\n  return dataId ? item[dataId] : item;\n}\n\nfunction doFilter(p, val) {\n  var _a;\n  let newSource = [];\n  const filterValue = (_a = val === null || val === void 0 ? void 0 : val.trim()) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase();\n  if (!filterValue) {\n    newSource = p.source;\n  }\n  else {\n    for (let item of p.source) {\n      let val = getItemLabel(item, p.dataLabel);\n      if (typeof val === 'string') {\n        val = val.toLocaleLowerCase();\n        switch (p.filter) {\n          case 'start':\n            if (val.indexOf(filterValue) === 0) {\n              newSource.push(item);\n            }\n            break;\n          default:\n            if (val.indexOf(filterValue) > -1) {\n              newSource.push(item);\n            }\n            break;\n        }\n      }\n    }\n  }\n  return newSource;\n}\nconst DropdownListFilter = (p) => {\n  const filterChange = (value) => {\n    const items = doFilter(p, value);\n    p.onFilterChange({ value, items });\n  };\n  if (!p.filter) {\n    p.filter = 'contains';\n  }\n  filterChange(p.filterValue);\n  if (p.autocomplete) {\n    p.value = p.filterValue;\n  }\n  return (h(\"input\", Object.assign({ class: { 'filter-box': true, }, type: \"text\" }, p, { onClick: e => {\n      e.preventDefault();\n      p.onClick && p.onClick(e);\n    }, onInput: e => {\n      var _a;\n      p.onInput && p.onInput();\n      const value = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.value;\n      filterChange(value);\n    } })));\n};\n\nconst ArrowRenderer = () => {\n  return (h(\"span\", { class: \"arrow-wrapper\" },\n    h(\"svg\", { class: \"arrow\", \"aria-hidden\": \"true\", focusable: \"false\", role: \"img\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 320 512\" },\n      h(\"path\", { fill: \"currentColor\", d: \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\" }))));\n};\n\nconst revoDropdownStyleCss = \"revo-dropdown{font-size:1em;font-family:\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;font-weight:400;line-height:2em;letter-spacing:0.01em;display:inline-flex;flex-direction:column;vertical-align:top;padding:0;box-sizing:border-box;cursor:pointer;position:relative}revo-dropdown .rv-dr-root{padding:5px 9px;padding-right:35px;flex-wrap:wrap;position:relative;border-radius:4px;cursor:text;display:inline-flex;position:relative;font-size:1rem;box-sizing:border-box;align-items:center}revo-dropdown input.filter-box{padding-left:6px;padding:9.5px 4px;width:0;min-width:30px;flex-grow:1;text-overflow:ellipsis;border:0;height:1.1876em;margin:0;display:block;background:none;box-sizing:content-box;letter-spacing:inherit;animation-duration:10ms}revo-dropdown input.filter-box:focus{outline:none}revo-dropdown .actions{right:9px;top:calc(50% - $font-size);position:absolute}revo-dropdown label{font-size:1rem;z-index:1;top:0;left:0;position:absolute;display:block;transform-origin:top left;line-height:1;transition:color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms, transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;transform:translate(14px, 14px) scale(1);pointer-events:none}revo-dropdown fieldset{border-color:#ececec;top:-5px;left:0;right:0;bottom:0;margin:0;padding:0 8px;overflow:hidden;position:absolute;border-style:solid;border-width:1px;border-radius:inherit;pointer-events:none}revo-dropdown fieldset legend{width:auto;height:11px;display:block;padding:0;font-size:0.75em;max-width:0.01px;text-align:left;transition:max-width 50ms cubic-bezier(0, 0, 0.2, 1) 0ms;visibility:hidden}revo-dropdown fieldset legend>span{display:inline-block;padding-left:5px;padding-right:5px}revo-dropdown.shrink label{transform:translate(14px, -6px) scale(0.75)}revo-dropdown.shrink legend{max-width:1000px;transition:max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms}revo-dropdown .arrow{width:9px;margin-top:5px;margin-left:5px;opacity:0.4}revo-dropdown .arrow-wrapper{width:15px;text-align:center}revo-dropdown.active label{color:#0089ff}revo-dropdown.active fieldset{border-color:#0089ff}.revo-dropdown-list{font-size:1em;font-family:\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;font-weight:400;line-height:2em;letter-spacing:0.01em;position:absolute;transition:opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 160ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;z-index:999}.revo-dropdown-list.top .dropdown-inner{bottom:2px;flex-direction:column-reverse}.revo-dropdown-list.top .dropdown-inner .filter-box{margin-bottom:0}.revo-dropdown-list:not(.top) .dropdown-inner{top:2px;flex-direction:column}.revo-dropdown-list:not(.top) .dropdown-inner .filter-box{margin-top:0}.revo-dropdown-list .dropdown-inner{display:flex;max-height:100%;position:absolute;padding:8px 0;box-sizing:border-box;min-height:16px;min-width:16px;box-shadow:0 0 14px 0 rgba(53, 64, 82, 0.05);border:1px solid rgba(0, 0, 0, 0.05);border-radius:4px;color:rgba(0, 0, 0, 0.87);overflow:hidden;background-color:#fff}.revo-dropdown-list .dropdown-inner .filter-box{border:1px solid #ececec;min-height:30px;line-height:30px;margin:10px;border-radius:6px}.revo-dropdown-list .dropdown-inner .filter-box:focus{outline:none;border-color:#0089ff}\";\n\nconst RevoDropdown = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.changeValue = createEvent(this, \"changeValue\", 7);\n    this.close = createEvent(this, \"close\", 7);\n    this.open = createEvent(this, \"open\", 7);\n    this.uuid = '';\n    this.isClosing = false;\n    this.currentItem = null;\n    this.isVisible = false;\n    /**\n     * Should dropdown autoclose on changeValue\n     */\n    this.autoClose = true;\n    /**\n     * Define object mapping for id/value\n     */\n    this.source = [];\n    /**\n     * Placeholder text\n     */\n    this.placeholder = 'Select';\n    /**\n     * Where to append element\n     */\n    this.appendTo = 'body';\n    this.hasFilter = true;\n    this.autocomplete = false;\n    this.autoFocus = false;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * Close dropdown\n   */\n  async doClose(isDisconnected = false) {\n    if (!isDisconnected) {\n      const event = this.close.emit();\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    this.isClosing = true;\n    this.isVisible = false;\n  }\n  /**\n   * Open dropdown\n   */\n  async doOpen() {\n    const event = this.open.emit();\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.isVisible = true;\n  }\n  /**\n   * Change value\n   */\n  async doChange(val, originalEvent) {\n    this.value = val;\n    this.changeValue.emit({ val, originalEvent });\n    if (this.autocompleteInput) {\n      this.autocompleteInput.value = getItemLabel(this.currentItem, this.dataLabel);\n    }\n    if (this.autoClose && this.isVisible) {\n      this.doClose();\n    }\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Internal\n  //\n  // --------------------------------------------------------------------------\n  /** Action finished */\n  onMouseUp(e) {\n    var _a;\n    if (this.isVisible && !e.defaultPrevented) {\n      const isOutside = !((_a = e.target) === null || _a === void 0 ? void 0 : _a.closest(`[${UUID}=\"${this.uuid}\"]`));\n      if (isOutside) {\n        this.doClose();\n      }\n    }\n  }\n  onKey(e) {\n    switch (e.code) {\n      case 'Escape':\n        e.preventDefault();\n        this.doClose();\n        break;\n    }\n  }\n  onValueChanged(newVal) {\n    this.currentItem = this.getValue(newVal);\n  }\n  componentWillLoad() {\n    if (this.value) {\n      this.currentItem = this.value;\n    }\n  }\n  connectedCallback() {\n    this.uuid = `${new Date().getTime()}-rvdropdown`;\n    if (typeof this.value !== 'undefined') {\n      this.onValueChanged(this.value);\n    }\n  }\n  disconnectedCallback() {\n    this.doClose(true);\n  }\n  componentDidRender() {\n    if (this.dropdown && this.appendTo === 'body') {\n      document.body.appendChild(this.dropdown);\n    }\n    if (this.isVisible) {\n      this.updateStyles();\n    }\n    if (this.dropdownInput) {\n      this.dropdownInput.focus();\n    }\n    if (this.autoFocus) {\n      if (this.autocomplete) {\n        setTimeout(() => { var _a; return (_a = this.autocompleteInput) === null || _a === void 0 ? void 0 : _a.focus(); }, 0);\n      }\n    }\n  }\n  renderDropdown() {\n    return (h(\"div\", Object.assign({}, { [UUID]: this.uuid }, { class: \"revo-dropdown-list\", ref: e => (this.dropdown = e) }), h(\"div\", { class: \"dropdown-inner\", ref: e => (this.dropdownInner = e) }, this.hasFilter && !this.autocomplete ? (h(DropdownListFilter, { ref: e => (this.dropdownInput = e), source: this.source, filter: this.filter, dataLabel: this.dataLabel, value: this.currentFilter || '', filterValue: this.currentFilter || '', onFilterChange: e => {\n        var _a;\n        this.currentFilter = e.value;\n        this.currentSource = e.items;\n        (_a = this.revoList) === null || _a === void 0 ? void 0 : _a.refresh(this.currentSource);\n      } })) : undefined, h(\"revo-list\", { ref: e => (this.revoList = e), isFocused: true, sourceItems: this.currentSource, dataLabel: this.dataLabel, onDoChange: e => this.doChange(e.detail.item, e.detail.e) }))));\n  }\n  renderSelect() {\n    const val = this.currentItem && getItemLabel(this.currentItem, this.dataLabel) || '';\n    return h(\"input\", { type: \"text\", disabled: true, class: \"filter-box\", value: val });\n  }\n  renderAutocomplete() {\n    const val = this.currentItem ? getItemLabel(this.currentItem, this.dataLabel) : '';\n    return (h(DropdownListFilter, { ref: e => (this.autocompleteInput = e), autocomplete: 'true', source: this.source, filter: this.filter, dataLabel: this.dataLabel, value: val, filterValue: this.currentFilter, onKeyDown: e => {\n        if (this.isVisible) {\n          return;\n        }\n        switch (e.code) {\n          case 'ArrowUp':\n          case 'ArrowDown':\n            e.preventDefault();\n            this.showAutoComplete();\n            break;\n        }\n      }, onInput: () => this.showAutoComplete(), onFocus: () => this.showAutoComplete(), onClick: () => this.showAutoComplete(), onFilterChange: e => {\n        var _a;\n        this.currentFilter = e.value;\n        this.currentSource = e.items;\n        (_a = this.revoList) === null || _a === void 0 ? void 0 : _a.refresh(this.currentSource);\n      } }));\n  }\n  render() {\n    var _a;\n    let list;\n    if (this.isVisible) {\n      list = this.renderDropdown();\n    }\n    const props = {\n      [UUID]: this.uuid,\n      class: {\n        active: this.isVisible,\n        shrink: this.isVisible || !!this.currentItem || !!((_a = this.autocompleteInput) === null || _a === void 0 ? void 0 : _a.value),\n      },\n      ref: e => (this.element = e),\n      onClick: e => this.selectClick(e)\n    };\n    if (this.autocomplete) {\n      props['autocomplete'] = true;\n    }\n    return (h(Host, Object.assign({}, props), h(\"label\", null, this.placeholder), h(\"div\", { class: \"rv-dr-root\" }, this.autocomplete ? this.renderAutocomplete() : this.renderSelect(), h(\"span\", { class: \"actions\" }, h(ArrowRenderer, null)), h(\"fieldset\", null, h(\"legend\", null, h(\"span\", null, this.placeholder)))), list));\n  }\n  showAutoComplete() {\n    if (!this.isVisible && !this.isClosing) {\n      this.isVisible = true;\n    }\n    this.isClosing = false;\n  }\n  getValue(newVal) {\n    for (let index in this.source) {\n      const item = this.source[index];\n      if (newVal == getItemValue(item, this.dataId)) {\n        return item;\n      }\n    }\n    return null;\n  }\n  selectClick(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (this.isVisible) {\n      this.doClose();\n    }\n    else {\n      this.doOpen();\n    }\n  }\n  updateStyles() {\n    if (!this.dropdown) {\n      return;\n    }\n    const { top, left, height } = this.element.getBoundingClientRect();\n    const visibleRect = this.clientRectangle();\n    let currentTop = top + height + visibleRect.top;\n    const style = {};\n    // top\n    if (currentTop > visibleRect.centerY) {\n      style.top = `${currentTop - height}px`;\n      style.maxHeight = currentTop - height - visibleRect.top - 50;\n      this.dropdown.classList.add('top');\n      // bottom\n    }\n    else {\n      style.top = `${currentTop}px`;\n      style.maxHeight = visibleRect.bottom - currentTop - 50;\n      this.dropdown.classList.remove('top');\n    }\n    // left\n    let currentLeft = left + visibleRect.left;\n    const rightSpace = visibleRect.right - (currentLeft + this.dropdown.clientWidth);\n    if (rightSpace < 0) {\n      currentLeft += rightSpace;\n    }\n    style.left = `${currentLeft}px`;\n    this.dropdownInner.style.maxHeight = `${Math.min(style.maxHeight, this.maxHeight || style.maxHeight)}px`;\n    this.dropdownInner.style.maxWidth = style.maxWidth;\n    for (let s in style) {\n      this.dropdown.style[s] = style[s];\n    }\n  }\n  clientRectangle() {\n    const rect = {\n      top: window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop,\n      bottom: 0,\n      centerY: 0,\n      height: document.body.clientHeight,\n      left: window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,\n      right: 0,\n      width: document.body.clientWidth,\n      centerX: 0,\n    };\n    rect.bottom = rect.top + rect.height;\n    rect.right = rect.left + rect.width;\n    rect.centerY = rect.top + rect.height / 2;\n    rect.centerX = rect.left + rect.width / 2;\n    return rect;\n  }\n  static get watchers() { return {\n    \"value\": [\"onValueChanged\"]\n  }; }\n};\nRevoDropdown.style = revoDropdownStyleCss;\n\nconst revoListStyleCss = \"revo-list{overflow-x:hidden;overflow-y:auto;max-height:100%;display:block}revo-list ul{margin:0;padding:0;outline:0;list-style:none}revo-list ul>li{width:auto;overflow:hidden;font-size:14px;box-sizing:border-box;min-height:48px;font-weight:400;line-height:1.5;padding-top:6px;white-space:nowrap;padding-bottom:6px;padding-left:16px;padding-right:16px;display:flex;position:relative;text-align:left;align-items:center;justify-content:flex-start;text-decoration:none;cursor:pointer}revo-list ul>li.selected{background-color:rgba(0, 0, 0, 0.04)}revo-list ul>li:hover{background-color:rgba(0, 0, 0, 0.04)}\";\n\nconst RevoDropdownList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.doChange = createEvent(this, \"doChange\", 3);\n    this.currentItem = 0;\n    /**\n     * Define object mapping for id/value\n     */\n    this.sourceItems = [];\n    this.isFocused = false;\n  }\n  /** Recived keyboard down from element */\n  onKey(e) {\n    let item;\n    if (!this.isFocused) {\n      return;\n    }\n    switch (e.code) {\n      case 'ArrowUp':\n        e.preventDefault();\n        if (this.currentItem <= 0) {\n          return;\n        }\n        this.currentItem--;\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        if (this.sourceItems[this.currentItem + 1]) {\n          this.currentItem++;\n        }\n        break;\n      case 'Tab':\n        e.preventDefault();\n        item = this.sourceItems[this.currentItem];\n        if (item) {\n          this.doChange.emit({ item: item, e });\n        }\n        break;\n      case 'Enter':\n        e.preventDefault();\n        item = this.sourceItems[this.currentItem];\n        if (item) {\n          this.doChange.emit({ item, e });\n        }\n        break;\n    }\n  }\n  async refresh(source) {\n    this.sourceItems = source;\n  }\n  componentDidRender() {\n    var _a;\n    (_a = this.selectedEl) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n      block: 'nearest',\n      inline: 'nearest',\n    });\n  }\n  render() {\n    this.selectedEl = undefined;\n    const items = [];\n    for (let i in this.sourceItems) {\n      const item = this.sourceItems[i];\n      const isSelected = parseInt(i) === this.currentItem;\n      const props = {\n        class: { 'selected': isSelected },\n        ref: e => {\n          if (isSelected) {\n            this.selectedEl = e;\n          }\n        },\n        onClick: e => this.doChange.emit({ item, e })\n      };\n      const li = h(\"li\", Object.assign({}, props), getItemLabel(item, this.dataLabel));\n      items.push(li);\n    }\n    return h(\"ul\", null, items);\n  }\n};\nRevoDropdownList.style = revoListStyleCss;\n\nexport { RevoDropdown as revo_dropdown, RevoDropdownList as revo_list };\n"]},"metadata":{},"sourceType":"module"}