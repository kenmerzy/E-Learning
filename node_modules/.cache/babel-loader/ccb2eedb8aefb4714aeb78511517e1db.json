{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ngoclong/ReactJS/e-learning/src/pages/UploadCourse/UploadCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CourseItem from '../../components/Courses/CourseItem/CourseItem';\nimport itemCourseImage from \"../../assets/images/itemCourseImage.svg\";\nimport LogoWhite from \"../../assets/images/LogoWhite.svg\";\nimport CreateCourseComponent from '../../components/UploadCourse/CreateCourseComponent';\nimport AvatarMeng from \"../../assets/images/AvatarMeng.svg\";\nimport background6 from \"../../assets/images/background6.svg\";\nimport backgroundUpload from \"../../assets/images/backgroundUpload.svg\";\nimport styles from './UploadCourse.module.scss';\nimport { coursesAction } from '../../redux/actions';\n\nconst UploadCourse = () => {\n  _s();\n\n  const [isModalShow, setModalShow] = useState(false);\n  const [upLoadedVideos, setUpLoadedVideos] = useState(useSelector(value => {\n    var _value$courseReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$courseReducer = value.courseReducer) === null || _value$courseReducer === void 0 ? void 0 : _value$courseReducer.token;\n  }));\n  const token = useSelector(value => {\n    var _value$userReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$userReducer = value.userReducer) === null || _value$userReducer === void 0 ? void 0 : _value$userReducer.token;\n  }); // eslint-disable-next-line no-unused-vars\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(coursesAction.GET_UPLOADED_VIDEOS({\n      token\n    }, response => {\n      console.log('responseGetUploadedVideos', response);\n\n      if (response.success) {\n        const {\n          data\n        } = response;\n        setUpLoadedVideos(data);\n      } else {\n        console.log('===============================================');\n        console.log('get UploadedVideos fail');\n        console.log('===============================================');\n      }\n    }));\n  });\n\n  const handleCloseModal = () => {\n    setModalShow(false);\n  };\n\n  const handleShowModal = () => {\n    setModalShow(true);\n  };\n\n  const handleOnClick = item => {\n    history.push({\n      pathname: 'create-new-coruse',\n      state: {\n        maKhoaHoc: item.id,\n        token\n      }\n    });\n  }; // const numbers = [\n  //   {\n  //     title: 'Flutter for Designers',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: itemCourseImage,\n  //   },\n  //   {\n  //     title: 'SwiftUI Livestreams',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background3,\n  //   },\n  //   {\n  //     title: 'Design System in Figma',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background4,\n  //   },\n  //   {\n  //     title: 'UI Design for Developers',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background5,\n  //   },\n  //   {\n  //     title: 'React for Designers',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background6,\n  //   },\n  // ]\n\n\n  const listItems = upLoadedVideos.map(item => /*#__PURE__*/_jsxDEV(CourseItem, {\n    title: item.tenKhoaHoc,\n    description: item.moTa,\n    customStyles: {\n      margin: 20\n    },\n    logo: LogoWhite,\n    avatar: AvatarMeng,\n    background: background6,\n    totalView: item.soLuongDaBan,\n    gia: item.gia,\n    totalVideos: item.soLuongDaBan,\n    totalTimes: item.tongThoiLuong,\n    onClick: () => handleOnClick(item)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 50\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [isModalShow && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      backdrop: true,\n      bsPrefix: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(CreateCourseComponent, {\n        onCloseModalClick: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(CourseItem, {\n        title: \"Create a new course\",\n        description: \"Long time no see. Create a new course now. \",\n        customStyles: {\n          margin: 20\n        },\n        background: backgroundUpload,\n        onClick: handleShowModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), listItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadCourse, \"hz8FOyV7OLS7pJ+ObsQ+RzL1Y+8=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = UploadCourse;\nexport default UploadCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadCourse\");","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/pages/UploadCourse/UploadCourse.js"],"names":["React","useState","useEffect","Modal","useHistory","useSelector","useDispatch","CourseItem","CreateCourseComponent","styles","coursesAction","UploadCourse","isModalShow","setModalShow","upLoadedVideos","setUpLoadedVideos","value","courseReducer","token","userReducer","dispatch","history","GET_UPLOADED_VIDEOS","response","console","log","success","data","handleCloseModal","handleShowModal","handleOnClick","item","push","pathname","state","maKhoaHoc","id","listItems","map","tenKhoaHoc","moTa","margin","LogoWhite","AvatarMeng","background6","soLuongDaBan","gia","tongThoiLuong","container","backgroundUpload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport CourseItem from '../../components/Courses/CourseItem/CourseItem'\nimport itemCourseImage from '../../assets/images/itemCourseImage.svg'\nimport LogoWhite from '../../assets/images/LogoWhite.svg'\nimport CreateCourseComponent from '../../components/UploadCourse/CreateCourseComponent'\nimport AvatarMeng from '../../assets/images/AvatarMeng.svg'\nimport background6 from '../../assets/images/background6.svg'\nimport backgroundUpload from '../../assets/images/backgroundUpload.svg'\nimport styles from './UploadCourse.module.scss'\nimport { coursesAction } from '../../redux/actions'\n\nconst UploadCourse = () => {\n  const [isModalShow, setModalShow] = useState(false)\n  const [upLoadedVideos, setUpLoadedVideos] = useState(useSelector((value) => value?.courseReducer?.token))\n  const token = useSelector((value) => value?.userReducer?.token)\n  // eslint-disable-next-line no-unused-vars\n  const dispatch = useDispatch()\n  const history = useHistory()\n  useEffect(() => {\n    dispatch(coursesAction.GET_UPLOADED_VIDEOS({\n      token,\n    }, (response) => {\n      console.log('responseGetUploadedVideos', response)\n      if (response.success) {\n        const { data } = response\n        setUpLoadedVideos(data)\n      } else {\n        console.log('===============================================')\n        console.log('get UploadedVideos fail')\n        console.log('===============================================')\n      }\n    }))\n  })\n  const handleCloseModal = () => {\n    setModalShow(false)\n  }\n  const handleShowModal = () => {\n    setModalShow(true)\n  }\n  const handleOnClick = (item) => {\n    history.push({\n      pathname: 'create-new-coruse',\n      state:\n      {\n        maKhoaHoc: item.id,\n        token,\n      },\n    })\n  }\n  // const numbers = [\n  //   {\n  //     title: 'Flutter for Designers',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: itemCourseImage,\n  //   },\n  //   {\n  //     title: 'SwiftUI Livestreams',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background3,\n  //   },\n  //   {\n  //     title: 'Design System in Figma',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background4,\n  //   },\n  //   {\n  //     title: 'UI Design for Developers',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background5,\n  //   },\n  //   {\n  //     title: 'React for Designers',\n  //     description: '20 videos - 3 hours',\n  //     logo: LogoWhite,\n  //     avatar: AvatarMeng,\n  //     totalView: '12354',\n  //     gia: '99.99',\n  //     background: background6,\n  //   },\n\n  // ]\n  const listItems = upLoadedVideos.map((item) => <CourseItem\n    title={item.tenKhoaHoc}\n    description={item.moTa}\n    customStyles={{ margin: 20 }}\n    logo={LogoWhite}\n    avatar={AvatarMeng}\n    background={background6}\n    totalView={item.soLuongDaBan}\n    gia={item.gia}\n    totalVideos={item.soLuongDaBan}\n    totalTimes={item.tongThoiLuong}\n    onClick={() => handleOnClick(item)}\n  />)\n  return (\n    <div className={styles.container}>\n      {isModalShow && <Modal\n        show\n        backdrop\n        bsPrefix=\"modal\"\n      >\n        <CreateCourseComponent\n          onCloseModalClick={handleCloseModal}\n        />\n      </Modal>}\n      <ul className=\"row\">\n        <CourseItem\n          title=\"Create a new course\"\n          description=\"Long time no see. Create a new course now. \"\n          customStyles={{ margin: 20 }}\n          background={backgroundUpload}\n          onClick={handleShowModal}\n        />\n        {listItems}\n      </ul>\n    </div>\n  )\n}\nexport default UploadCourse\n"]},"metadata":{},"sourceType":"module"}