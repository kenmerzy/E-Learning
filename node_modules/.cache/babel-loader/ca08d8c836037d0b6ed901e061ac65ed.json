{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ngoclong/ReactJS/e-learning/src/pages/UploadCourse/UploadCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CourseItem from '../../components/Courses/CourseItem/CourseItem';\nimport LogoWhite from \"../../assets/images/LogoWhite.svg\";\nimport CreateCourseComponent from '../../components/UploadCourse/CreateCourseComponent';\nimport AvatarMeng from \"../../assets/images/AvatarMeng.svg\";\nimport background6 from \"../../assets/images/background6.svg\";\nimport backgroundUpload from \"../../assets/images/backgroundUpload.svg\";\nimport styles from './UploadCourse.module.scss';\n\nconst UploadCourse = () => {\n  _s();\n\n  const [isModalShow, setModalShow] = useState(false);\n  const token = useSelector(value => {\n    var _value$userReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$userReducer = value.userReducer) === null || _value$userReducer === void 0 ? void 0 : _value$userReducer.token;\n  });\n  const upLoadedVideos = useSelector(value => {\n    var _value$coursesReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$coursesReducer = value.coursesReducer) === null || _value$coursesReducer === void 0 ? void 0 : _value$coursesReducer.arrayUploadedVideos;\n  }); // eslint-disable-next-line no-unused-vars\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleCloseModal = () => {\n    setModalShow(false);\n  };\n\n  const handleShowModal = () => {\n    setModalShow(true);\n  };\n\n  const handleOnClick = item => {\n    history.push({\n      pathname: 'create-new-coruse',\n      state: {\n        maKhoaHoc: item.id,\n        token\n      }\n    });\n  };\n\n  const listItems = upLoadedVideos.map(item => /*#__PURE__*/_jsxDEV(CourseItem, {\n    title: item.tenKhoaHoc,\n    description: item.moTa,\n    customStyles: {\n      margin: 20\n    },\n    logo: LogoWhite,\n    avatar: AvatarMeng,\n    background: background6,\n    totalView: item.soLuongDaBan,\n    gia: item.gia,\n    totalVideos: item.soLuongDaBan,\n    totalTimes: item.tongThoiLuong,\n    onClick: () => handleOnClick(item)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 50\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [isModalShow && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      backdrop: true,\n      bsPrefix: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(CreateCourseComponent, {\n        onCloseModalClick: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(CourseItem, {\n        title: \"Create a new course\",\n        description: \"Long time no see. Create a new course now. \",\n        customStyles: {\n          margin: 20\n        },\n        background: backgroundUpload,\n        onClick: handleShowModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), listItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadCourse, \"1JdlFYbqo8OFvLLd3DgZSKY9itc=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = UploadCourse;\nexport default UploadCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadCourse\");","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/pages/UploadCourse/UploadCourse.js"],"names":["React","useState","Modal","useHistory","useSelector","useDispatch","CourseItem","CreateCourseComponent","styles","UploadCourse","isModalShow","setModalShow","token","value","userReducer","upLoadedVideos","coursesReducer","arrayUploadedVideos","dispatch","history","handleCloseModal","handleShowModal","handleOnClick","item","push","pathname","state","maKhoaHoc","id","listItems","map","tenKhoaHoc","moTa","margin","LogoWhite","AvatarMeng","background6","soLuongDaBan","gia","tongThoiLuong","container","backgroundUpload"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport CourseItem from '../../components/Courses/CourseItem/CourseItem'\nimport LogoWhite from '../../assets/images/LogoWhite.svg'\nimport CreateCourseComponent from '../../components/UploadCourse/CreateCourseComponent'\nimport AvatarMeng from '../../assets/images/AvatarMeng.svg'\nimport background6 from '../../assets/images/background6.svg'\nimport backgroundUpload from '../../assets/images/backgroundUpload.svg'\nimport styles from './UploadCourse.module.scss'\n\nconst UploadCourse = () => {\n  const [isModalShow, setModalShow] = useState(false)\n  const token = useSelector((value) => value?.userReducer?.token)\n  const upLoadedVideos = useSelector((value) => value?.coursesReducer?.arrayUploadedVideos)\n  // eslint-disable-next-line no-unused-vars\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleCloseModal = () => {\n    setModalShow(false)\n  }\n  const handleShowModal = () => {\n    setModalShow(true)\n  }\n  const handleOnClick = (item) => {\n    history.push({\n      pathname: 'create-new-coruse',\n      state:\n      {\n        maKhoaHoc: item.id,\n        token,\n      },\n    })\n  }\n\n  const listItems = upLoadedVideos.map((item) => <CourseItem\n    title={item.tenKhoaHoc}\n    description={item.moTa}\n    customStyles={{ margin: 20 }}\n    logo={LogoWhite}\n    avatar={AvatarMeng}\n    background={background6}\n    totalView={item.soLuongDaBan}\n    gia={item.gia}\n    totalVideos={item.soLuongDaBan}\n    totalTimes={item.tongThoiLuong}\n    onClick={() => handleOnClick(item)}\n  />)\n  return (\n    <div className={styles.container}>\n      {isModalShow && <Modal\n        show\n        backdrop\n        bsPrefix=\"modal\"\n      >\n        <CreateCourseComponent\n          onCloseModalClick={handleCloseModal}\n        />\n      </Modal>}\n      <ul className=\"row\">\n        <CourseItem\n          title=\"Create a new course\"\n          description=\"Long time no see. Create a new course now. \"\n          customStyles={{ margin: 20 }}\n          background={backgroundUpload}\n          onClick={handleShowModal}\n        />\n        {listItems}\n      </ul>\n    </div>\n  )\n}\nexport default UploadCourse\n"]},"metadata":{},"sourceType":"module"}