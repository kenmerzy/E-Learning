{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { coursesTypes } from '../types';\nimport { API_URL } from '../../configs'; // watcher saga: watches for actions dispatched to the store, starts worker saga\n\nfunction* getAllCourse(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    maLKH,\n    maUser\n  } = data;\n\n  try {\n    var _response$data;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/`, {\n      maLKH,\n      maUser\n    }));\n    yield put({\n      type: coursesTypes.GET_ALL_COURSE_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}\n\nfunction* getAllCategory(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n\n  try {\n    var _response$data2;\n\n    const response = yield call(() => axios.post(`${API_URL}/loaikhoahoc/`));\n    yield put({\n      type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response2;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}\n\nfunction* getAllAuthor(action) {\n  const {\n    data\n  } = action.payload;\n\n  try {\n    var _response$data3;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/author/`));\n    yield put({\n      type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data\n      }\n    }); // callback(response?.data)\n  } catch (error) {\n    var _error$response3;\n\n    console.log(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n  }\n}\n\nfunction* getUploadedVideos(action) {\n  const {\n    data\n  } = action.payload;\n  const {\n    token\n  } = data;\n\n  try {\n    var _response$data4;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/uploaded`, {\n      token\n    }));\n    console.log('===============================================');\n    console.log('tryGetVideo', response);\n    console.log('===============================================');\n    yield put({\n      type: coursesTypes.GET_UPLOADED_VIDEOS_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data\n      }\n    });\n  } catch (error) {\n    var _error$response4;\n\n    console.log(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n}\n\nfunction* addNewCourse(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    token,\n    tenKhoaHoc,\n    moTa,\n    gia,\n    thoiHan,\n    maLKH\n  } = data;\n\n  try {\n    var _response$data5;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/add`, {\n      token,\n      tenKhoaHoc,\n      moTa,\n      gia,\n      thoiHan,\n      maLKH\n    }));\n    yield put({\n      type: coursesTypes.ADD_NEW_COURSE_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response5;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n  }\n}\n\nfunction* addNewVideo(action) {\n  const {\n    data,\n    callback\n  } = action.payload; // const {\n  //   token,\n  //   maKH,\n  //   tieuDe,\n  //   moTa,\n  //   videoUpload,\n  // } = data\n\n  try {\n    var _response$data6;\n\n    const response = yield call(() => axios.post(`${API_URL}/baigiang/add`, {\n      token,\n      maKH,\n      tieuDe,\n      moTa,\n      videoUpload\n    }));\n    yield put({\n      type: coursesTypes.ADD_NEW_VIDEO_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : _response$data6.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response6;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data);\n  }\n}\n\nfunction* getArrVideoOfCourse(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    maKH\n  } = data;\n\n  try {\n    var _response$data7;\n\n    const response = yield call(() => axios.post(`${API_URL}/baigiang/`, {\n      maKH\n    }));\n    yield put({\n      type: coursesTypes.GET_VIDEOS_OF_COURSE_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : _response$data7.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response7;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data);\n  }\n}\n\nexport default function* courseSagas() {\n  yield takeLatest(coursesTypes.GET_ALL_COURSE, getAllCourse);\n  yield takeLatest(coursesTypes.GET_ALL_CATEGORY, getAllCategory);\n  yield takeLatest(coursesTypes.GET_ALL_AUTHOR, getAllAuthor);\n  yield takeLatest(coursesTypes.GET_UPLOADED_VIDEOS, getUploadedVideos);\n  yield takeLatest(coursesTypes.ADD_NEW_COURSE, addNewCourse);\n  yield takeLatest(coursesTypes.ADD_NEW_VIDEO, addNewVideo);\n  yield takeLatest(coursesTypes.GET_VIDEOS_OF_COURSE, getArrVideoOfCourse);\n}","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/courses.js"],"names":["takeLatest","call","put","axios","coursesTypes","API_URL","getAllCourse","action","data","callback","payload","maLKH","maUser","response","post","type","GET_ALL_COURSE_SUCCESS","error","getAllCategory","GET_ALL_CATEGORY_SUCCESS","getAllAuthor","GET_ALL_AUTHOR_SUCCESS","console","log","getUploadedVideos","token","GET_UPLOADED_VIDEOS_SUCCESS","addNewCourse","tenKhoaHoc","moTa","gia","thoiHan","ADD_NEW_COURSE_SUCCESS","addNewVideo","maKH","tieuDe","videoUpload","ADD_NEW_VIDEO_SUCCESS","getArrVideoOfCourse","GET_VIDEOS_OF_COURSE_SUCCESS","courseSagas","GET_ALL_COURSE","GET_ALL_CATEGORY","GET_ALL_AUTHOR","GET_UPLOADED_VIDEOS","ADD_NEW_COURSE","ADD_NEW_VIDEO","GET_VIDEOS_OF_COURSE"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { coursesTypes } from '../types'\nimport { API_URL } from '../../configs'\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nfunction* getAllCourse(action) {\n  const { data, callback } = action.payload\n  const {\n    maLKH,\n    maUser,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/`, {\n        maLKH,\n        maUser,\n      })\n    )\n    yield put({\n      type: coursesTypes.GET_ALL_COURSE_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* getAllCategory(action) {\n  const { data, callback } = action.payload\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/loaikhoahoc/`)\n    )\n    yield put({\n      type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* getAllAuthor(action) {\n  const { data } = action.payload\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/author/`)\n    )\n    yield put({\n      type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    // callback(response?.data)\n  } catch (error) {\n    console.log(error?.response?.data)\n  }\n}\n\nfunction* getUploadedVideos(action) {\n  const { data } = action.payload\n  const { token } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/uploaded`, {\n        token,\n      })\n    )\n    console.log('===============================================')\n    console.log('tryGetVideo', response)\n    console.log('===============================================')\n    yield put({\n      type: coursesTypes.GET_UPLOADED_VIDEOS_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n  } catch (error) {\n    console.log(error?.response?.data)\n  }\n}\nfunction* addNewCourse(action) {\n  const { data, callback } = action.payload\n  const {\n    token,\n    tenKhoaHoc,\n    moTa,\n    gia,\n    thoiHan,\n    maLKH,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/add`, {\n        token,\n        tenKhoaHoc,\n        moTa,\n        gia,\n        thoiHan,\n        maLKH,\n      })\n    )\n    yield put({\n      type: coursesTypes.ADD_NEW_COURSE_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* addNewVideo(action) {\n  const { data, callback } = action.payload\n  // const {\n  //   token,\n  //   maKH,\n  //   tieuDe,\n  //   moTa,\n  //   videoUpload,\n\n  // } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/baigiang/add`, {\n        token,\n        maKH,\n        tieuDe,\n        moTa,\n        videoUpload,\n      })\n    )\n    yield put({\n      type: coursesTypes.ADD_NEW_VIDEO_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* getArrVideoOfCourse(action) {\n  const { data, callback } = action.payload\n  const {\n    maKH,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/baigiang/`, {\n        maKH,\n      })\n    )\n    yield put({\n      type: coursesTypes.GET_VIDEOS_OF_COURSE_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nexport default function* courseSagas() {\n  yield takeLatest(coursesTypes.GET_ALL_COURSE, getAllCourse)\n  yield takeLatest(coursesTypes.GET_ALL_CATEGORY, getAllCategory)\n  yield takeLatest(coursesTypes.GET_ALL_AUTHOR, getAllAuthor)\n  yield takeLatest(coursesTypes.GET_UPLOADED_VIDEOS, getUploadedVideos)\n  yield takeLatest(coursesTypes.ADD_NEW_COURSE, addNewCourse)\n  yield takeLatest(coursesTypes.ADD_NEW_VIDEO, addNewVideo)\n  yield takeLatest(coursesTypes.GET_VIDEOS_OF_COURSE, getArrVideoOfCourse)\n}\n"]},"metadata":{},"sourceType":"module"}