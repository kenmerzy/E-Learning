{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ngoclong/ReactJS/e-learning/src/pages/UploadCourse/UploadCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CourseItem from '../../components/Courses/CourseItem/CourseItem';\nimport LogoWhite from \"../../assets/images/LogoWhite.svg\";\nimport CreateCourseComponent from '../../components/UploadCourse/CreateCourseComponent';\nimport AvatarMeng from \"../../assets/images/AvatarMeng.svg\";\nimport background6 from \"../../assets/images/background6.svg\";\nimport backgroundUpload from \"../../assets/images/backgroundUpload.svg\";\nimport styles from './UploadCourse.module.scss';\nimport { coursesAction } from '../../redux/actions';\n\nconst UploadCourse = () => {\n  _s();\n\n  const [isModalShow, setModalShow] = useState(false);\n  const arrayUploadedCourses = useSelector(value => {\n    var _value$coursesReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$coursesReducer = value.coursesReducer) === null || _value$coursesReducer === void 0 ? void 0 : _value$coursesReducer.arrayUploadedCourses;\n  }); // eslint-disable-next-line no-unused-vars\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleCloseModal = () => {\n    setModalShow(false);\n  };\n\n  const handleShowModal = () => {\n    setModalShow(true);\n  };\n\n  const onClickLearnNow = () => {};\n\n  const handleOnClick = item => {\n    dispatch(coursesAction.GET_VIDEOS_OF_COURSE({\n      maKH: item.id\n    }, response => {\n      if (response.success) {\n        history.push({\n          pathname: 'create-new-course',\n          state: {\n            maKH: item === null || item === void 0 ? void 0 : item.id,\n            params: item,\n            data: response.data\n          }\n        });\n      } else {\n        console.log('===============================================');\n        console.log('GET_VIDEOS_OF_COURSE Fail');\n        console.log('===============================================');\n      }\n    }));\n  };\n\n  const listItems = arrayUploadedCourses.map(item => /*#__PURE__*/_jsxDEV(CourseItem, {\n    title: item.tenKhoaHoc,\n    description: item.moTa,\n    customStyles: {\n      marginTop: 30,\n      marginLeft: 50\n    },\n    gia: item.gia,\n    logo: LogoWhite,\n    avatar: AvatarMeng,\n    background: background6,\n    id: item.id,\n    maLoaiKhoaHoc: item.maLKH,\n    onClick: () => handleOnClick(item),\n    totalTimes: item.tongThoiLuong,\n    totalVideos: item.soLuongBaiGiang,\n    totalView: item.soLuongDaBan,\n    active: true,\n    expired: false,\n    hideButton: true,\n    onClickLearnNow: onClickLearnNow\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 56\n  }, this));\n  useEffect(() => {}, [arrayUploadedCourses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [isModalShow && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      backdrop: true,\n      bsPrefix: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(CreateCourseComponent, {\n        onCloseModalClick: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(CourseItem, {\n        title: \"Create a new course\",\n        description: \"Long time no see. Create a new course now. \",\n        customStyles: {\n          marginTop: 30,\n          marginLeft: 50\n        },\n        background: backgroundUpload,\n        onClick: handleShowModal,\n        hideButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), listItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadCourse, \"5tKaAAtkkuOXl07lMXiNOdDv0lw=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = UploadCourse;\nexport default UploadCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadCourse\");","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/pages/UploadCourse/UploadCourse.js"],"names":["React","useState","useEffect","Modal","useHistory","useSelector","useDispatch","CourseItem","CreateCourseComponent","styles","coursesAction","UploadCourse","isModalShow","setModalShow","arrayUploadedCourses","value","coursesReducer","dispatch","history","handleCloseModal","handleShowModal","onClickLearnNow","handleOnClick","item","GET_VIDEOS_OF_COURSE","maKH","id","response","success","push","pathname","state","params","data","console","log","listItems","map","tenKhoaHoc","moTa","marginTop","marginLeft","gia","LogoWhite","AvatarMeng","background6","maLKH","tongThoiLuong","soLuongBaiGiang","soLuongDaBan","container","backgroundUpload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport CourseItem from '../../components/Courses/CourseItem/CourseItem'\nimport LogoWhite from '../../assets/images/LogoWhite.svg'\nimport CreateCourseComponent from '../../components/UploadCourse/CreateCourseComponent'\nimport AvatarMeng from '../../assets/images/AvatarMeng.svg'\nimport background6 from '../../assets/images/background6.svg'\nimport backgroundUpload from '../../assets/images/backgroundUpload.svg'\nimport styles from './UploadCourse.module.scss'\nimport { coursesAction } from '../../redux/actions'\n\nconst UploadCourse = () => {\n  const [isModalShow, setModalShow] = useState(false)\n  const arrayUploadedCourses = useSelector((value) => value?.coursesReducer?.arrayUploadedCourses)\n  // eslint-disable-next-line no-unused-vars\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleCloseModal = () => {\n    setModalShow(false)\n  }\n  const handleShowModal = () => {\n    setModalShow(true)\n  }\n\n  const onClickLearnNow = () => {\n  }\n\n  const handleOnClick = (item) => {\n    dispatch(coursesAction.GET_VIDEOS_OF_COURSE({ maKH: item.id },\n      (response) => {\n        if (response.success) {\n          history.push({\n            pathname: 'create-new-course',\n            state:\n            {\n              maKH: item?.id,\n              params: item,\n              data: response.data,\n            },\n          })\n        } else {\n          console.log('===============================================')\n          console.log('GET_VIDEOS_OF_COURSE Fail')\n          console.log('===============================================')\n        }\n      }))\n  }\n\n  const listItems = arrayUploadedCourses.map((item) => <CourseItem\n    key={item.id}\n    title={item.tenKhoaHoc}\n    description={item.moTa}\n    customStyles={{\n      marginTop: 30,\n      marginLeft: 50,\n    }}\n    gia={item.gia}\n    logo={LogoWhite}\n    avatar={AvatarMeng}\n    background={background6}\n    id={item.id}\n    maLoaiKhoaHoc={item.maLKH}\n    onClick={() => handleOnClick(item)}\n    totalTimes={item.tongThoiLuong}\n    totalVideos={item.soLuongBaiGiang}\n    totalView={item.soLuongDaBan}\n    active\n    expired={false}\n    hideButton\n    onClickLearnNow={onClickLearnNow}\n  />)\n\n  useEffect(() => {\n\n  }, [arrayUploadedCourses])\n\n  return (\n    <div className={styles.container}>\n      {isModalShow && <Modal\n        show\n        backdrop\n        bsPrefix=\"modal\"\n      >\n        <CreateCourseComponent\n          onCloseModalClick={handleCloseModal}\n        />\n      </Modal>}\n      <ul className=\"row\">\n        <CourseItem\n          title=\"Create a new course\"\n          description=\"Long time no see. Create a new course now. \"\n          customStyles={{\n            marginTop: 30,\n            marginLeft: 50,\n          }}\n          background={backgroundUpload}\n          onClick={handleShowModal}\n          hideButton\n        />\n        {listItems}\n      </ul>\n    </div>\n  )\n}\nexport default UploadCourse\n"]},"metadata":{},"sourceType":"module"}