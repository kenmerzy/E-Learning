{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { userType } from '../types';\nimport { API_URL } from '../../configs';\nexport default function* userSagas() {\n  yield takeLatest(userType.LOGIN, loginUser);\n  yield takeLatest(userType.REGISTER, registerUser);\n  yield takeLatest(userType.GET_PROFILE, getProfileUser);\n}\n\nfunction* loginUser(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    sdt,\n    password\n  } = data;\n\n  try {\n    var _response$data;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/login`, {\n      sdt,\n      password\n    }));\n    yield put({\n      type: userType.LOGIN_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}\n\nfunction* getProfileUser(action) {\n  const {\n    data,\n    callback\n  } = action.payload; // const { token } = data\n\n  try {\n    var _response$data2;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/`, data));\n    console.log('===============================================');\n    console.log('response', response === null || response === void 0 ? void 0 : response.data);\n    console.log('===============================================');\n    yield put({\n      type: userType.GET_PROFILE_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response2;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}\n\nfunction* recharge(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    token\n  } = data;\n\n  try {\n    var _response$data3;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/`, data));\n    yield put({\n      type: userType.RECHARGE_SUCCESS,\n      payload: {\n        data: response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data\n      }\n    });\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response3;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n  }\n}\n\nfunction* registerUser(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    sdt,\n    password,\n    hoVaTen,\n    accountType\n  } = data;\n  let response = '';\n\n  try {\n    var _response, _response$data4, _response2;\n\n    if (accountType === 'student') {\n      response = yield call(() => axios.post(`${API_URL}/auth/register/student`, {\n        sdt,\n        password,\n        hoVaTen\n      }));\n    } else {\n      response = yield call(() => axios.post(`${API_URL}/auth/register/teacher`, {\n        sdt,\n        password,\n        hoVaTen\n      }));\n    }\n\n    yield put({\n      type: userType.LOGIN_SUCCESS,\n      payload: {\n        data: (_response = response) === null || _response === void 0 ? void 0 : (_response$data4 = _response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data\n      }\n    });\n    callback((_response2 = response) === null || _response2 === void 0 ? void 0 : _response2.data);\n  } catch (error) {\n    var _error$response4;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n}","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/user.js"],"names":["takeLatest","call","put","axios","userType","API_URL","userSagas","LOGIN","loginUser","REGISTER","registerUser","GET_PROFILE","getProfileUser","action","data","callback","payload","sdt","password","response","post","type","LOGIN_SUCCESS","error","console","log","GET_PROFILE_SUCCESS","recharge","token","RECHARGE_SUCCESS","hoVaTen","accountType"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { userType } from '../types'\nimport { API_URL } from '../../configs'\n\nexport default function* userSagas() {\n  yield takeLatest(userType.LOGIN, loginUser)\n  yield takeLatest(userType.REGISTER, registerUser)\n  yield takeLatest(userType.GET_PROFILE, getProfileUser)\n}\nfunction* loginUser(action) {\n  const { data, callback } = action.payload\n  const { sdt, password } = data\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/login`, {\n        sdt,\n        password,\n      })\n    )\n    yield put({\n      type: userType.LOGIN_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* getProfileUser(action) {\n  const { data, callback } = action.payload\n  // const { token } = data\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/`, data)\n    )\n    console.log('===============================================')\n    console.log('response', response?.data)\n    console.log('===============================================')\n    yield put({\n      type: userType.GET_PROFILE_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* recharge(action) {\n  const { data, callback } = action.payload\n  const {\n    token,\n  } = data\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/`, data)\n    )\n    yield put({\n      type: userType.RECHARGE_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* registerUser(action) {\n  const { data, callback } = action.payload\n  const {\n    sdt,\n    password,\n    hoVaTen,\n    accountType,\n  } = data\n  let response = ''\n  try {\n    if (accountType === 'student') {\n      response = yield call(\n        () => axios.post(`${API_URL}/auth/register/student`, {\n          sdt,\n          password,\n          hoVaTen,\n        })\n      )\n    } else {\n      response = yield call(\n        () => axios.post(`${API_URL}/auth/register/teacher`, {\n          sdt,\n          password,\n          hoVaTen,\n        })\n      )\n    }\n    yield put({\n      type: userType.LOGIN_SUCCESS,\n      payload: { data: response?.data?.data },\n    })\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}