{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { adminTypes, coursesTypes } from '../types';\nimport { API_URL } from '../../configs';\nexport default function* adminSagas() {\n  yield takeLatest(adminTypes.CENSOR_COURSES, censorCourses);\n  yield takeLatest(adminTypes.DELETE_COURSES, deleteCourses);\n  yield takeLatest(adminTypes.ADD_CATEGORIES, addCategories);\n  yield takeLatest(adminTypes.GET_ALL_STUDENT, getAllStudent);\n  yield takeLatest(adminTypes.BAN_USER, getAllStudent);\n  yield takeLatest(adminTypes.UN_BAN_USER, getAllStudent);\n}\n\nfunction* banUser(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    token,\n    maUser\n  } = data;\n\n  try {\n    var _response$data;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/ban/`));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.success) {\n      var _response$data2, _response$data3;\n\n      yield put({\n        type: adminTypes.GET_ALL_STUDENT_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data\n        }\n      });\n      yield put({\n        type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data\n        }\n      });\n    }\n\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response;\n\n    console.log(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}\n\nfunction* UnBanUser(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    token,\n    maUser\n  } = data;\n\n  try {\n    var _response$data4;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/unban/`, {\n      token,\n      maUser\n    }));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.success) {\n      var _response$data5, _response$data6;\n\n      yield put({\n        type: adminTypes.GET_ALL_STUDENT_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.data\n        }\n      });\n      yield put({\n        type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : _response$data6.data\n        }\n      });\n    }\n\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response2;\n\n    console.log(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}\n\n_c = UnBanUser;\n\nfunction* getAllStudent(action) {\n  const {\n    data\n  } = action.payload;\n\n  try {\n    var _response$data7;\n\n    const response = yield call(() => axios.post(`${API_URL}/auth/student/`));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : _response$data7.success) {\n      var _response$data8;\n\n      yield put({\n        type: adminTypes.GET_ALL_STUDENT_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : _response$data8.data\n        }\n      });\n    } // callback(response?.data)\n\n  } catch (error) {\n    var _error$response3;\n\n    console.log(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n  }\n}\n\nfunction* censorCourses(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    maKH,\n    token\n  } = data;\n\n  try {\n    var _response$data9;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/verify`, {\n      maKH,\n      token\n    }));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data9 = response.data) === null || _response$data9 === void 0 ? void 0 : _response$data9.success) {\n      var _response$data10;\n\n      yield put({\n        type: coursesTypes.GET_UNCENSORED_COURSE_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data10 = response.data) === null || _response$data10 === void 0 ? void 0 : _response$data10.data\n        }\n      });\n    }\n\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response4;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n}\n\nfunction* deleteCourses(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    maKH,\n    token\n  } = data;\n\n  try {\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/delete`, {\n      maKH,\n      token\n    }));\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response5;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n  }\n}\n\nfunction* addCategories(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    token,\n    tenLoaiKhoaHoc\n  } = data;\n\n  try {\n    var _response$data11;\n\n    const response = yield call(() => axios.post(`${API_URL}/loaikhoahoc/add`, {\n      token,\n      tenLoaiKhoaHoc\n    }));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data11 = response.data) === null || _response$data11 === void 0 ? void 0 : _response$data11.success) {\n      var _response$data12;\n\n      yield put({\n        type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data12 = response.data) === null || _response$data12 === void 0 ? void 0 : _response$data12.data\n        }\n      });\n    }\n\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response6;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data);\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UnBanUser\");","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/admin.js"],"names":["takeLatest","call","put","axios","adminTypes","coursesTypes","API_URL","adminSagas","CENSOR_COURSES","censorCourses","DELETE_COURSES","deleteCourses","ADD_CATEGORIES","addCategories","GET_ALL_STUDENT","getAllStudent","BAN_USER","UN_BAN_USER","banUser","action","data","callback","payload","token","maUser","response","post","success","type","GET_ALL_STUDENT_SUCCESS","GET_ALL_AUTHOR_SUCCESS","error","console","log","UnBanUser","maKH","GET_UNCENSORED_COURSE_SUCCESS","tenLoaiKhoaHoc","GET_ALL_CATEGORY_SUCCESS"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { adminTypes, coursesTypes } from '../types'\nimport { API_URL } from '../../configs'\n\nexport default function* adminSagas() {\n  yield takeLatest(adminTypes.CENSOR_COURSES, censorCourses)\n  yield takeLatest(adminTypes.DELETE_COURSES, deleteCourses)\n  yield takeLatest(adminTypes.ADD_CATEGORIES, addCategories)\n  yield takeLatest(adminTypes.GET_ALL_STUDENT, getAllStudent)\n  yield takeLatest(adminTypes.BAN_USER, getAllStudent)\n  yield takeLatest(adminTypes.UN_BAN_USER, getAllStudent)\n}\nfunction* banUser(action) {\n  const { data, callback } = action.payload\n  const { token, maUser } = data\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/ban/`)\n    )\n    if (response?.data?.success) {\n      yield put({\n        type: adminTypes.GET_ALL_STUDENT_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n      yield put({\n        type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n    }\n    callback(response?.data)\n  } catch (error) {\n    console.log(error?.response?.data)\n  }\n}\n\nfunction* UnBanUser(action) {\n  const { data, callback } = action.payload\n  const { token, maUser } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/unban/`, {\n        token, maUser,\n      })\n    )\n    if (response?.data?.success) {\n      yield put({\n        type: adminTypes.GET_ALL_STUDENT_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n      yield put({\n        type: coursesTypes.GET_ALL_AUTHOR_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n    }\n    callback(response?.data)\n  } catch (error) {\n    console.log(error?.response?.data)\n  }\n}\n\nfunction* getAllStudent(action) {\n  const { data } = action.payload\n\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/auth/student/`)\n    )\n    if (response?.data?.success) {\n      yield put({\n        type: adminTypes.GET_ALL_STUDENT_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n    }\n    // callback(response?.data)\n  } catch (error) {\n    console.log(error?.response?.data)\n  }\n}\nfunction* censorCourses(action) {\n  const { data, callback } = action.payload\n  const {\n    maKH,\n    token,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/verify`, {\n        maKH,\n        token,\n      })\n    )\n    if (response?.data?.success) {\n      yield put({\n        type: coursesTypes.GET_UNCENSORED_COURSE_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n    }\n\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* deleteCourses(action) {\n  const { data, callback } = action.payload\n  const {\n    maKH,\n    token,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/delete`, {\n        maKH,\n        token,\n      })\n    )\n\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* addCategories(action) {\n  const { data, callback } = action.payload\n  const {\n    token,\n    tenLoaiKhoaHoc,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/loaikhoahoc/add`, {\n        token,\n        tenLoaiKhoaHoc,\n      })\n    )\n    if (response?.data?.success) {\n      yield put({\n        type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n    }\n\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}