{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ngoclong/ReactJS/ELearningHeroku/e-learning/src/components/Account/RechargeModal/RechargeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport styles from './RechargeModal.module.scss';\nimport ModalComponent from '../ModalComponent/ModalComponent';\nimport LoadingComponent from '../../Loading/LoadingComponent';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport { userAction } from '../../../redux/actions';\n\nconst RechargeModal = props => {\n  _s();\n\n  const {\n    onCloseModalClick,\n    loadingLabel\n  } = props;\n  const token = useSelector(value => {\n    var _value$userReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$userReducer = value.userReducer) === null || _value$userReducer === void 0 ? void 0 : _value$userReducer.token;\n  });\n  const [isModalShow, setIsModalShow] = useState('');\n  const [textModal, setTextModal] = useState('');\n  const [typeModal, setTypeModal] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [accountNumber, setAccountNumber] = useState('');\n  const [valueMoney, setValueMoney] = useState(0);\n  const dispatch = useDispatch();\n\n  const handleModalComponentCloseClick = () => {\n    setIsModalShow(false);\n  };\n\n  const setValueAccountNumberChange = event => {\n    setAccountNumber(event.target.value);\n  };\n\n  const setValueMoneyChange = event => {\n    setValueMoney(event.target.value);\n  };\n\n  const handlePositiveButtonClick = () => {\n    setIsLoading(true);\n    dispatch(userAction.RECHARGE({\n      token,\n      value: valueMoney\n    }, response => {\n      if (response.success) {\n        dispatch(userAction.GET_PROFILE({\n          token\n        }, responseGet => {\n          if (responseGet) {\n            setTypeModal('success');\n            setTextModal('Recharge successfully !');\n            setIsModalShow(true);\n            setIsLoading(false);\n          } else {\n            setTypeModal('fail');\n            setTextModal(responseGet.message);\n            setIsModalShow(true);\n            setIsLoading(false);\n          }\n        }));\n      } else {\n        setTypeModal('fail');\n        setTextModal(response.message);\n        setIsModalShow(true);\n        setIsLoading(false);\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [isModalShow && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      centered: true,\n      backdrop: true,\n      bsPrefix: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(ModalComponent, {\n        textModal: textModal,\n        handleModalComponentCloseClick: handleModalComponentCloseClick,\n        type: typeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coverT,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.title,\n        children: \"Recharge request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divInput,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Account number:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.formInput,\n          onSubmit: e => {\n            e.preventDefault();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            placeholder: \"Your account number...\",\n            formNoValidate: true,\n            value: accountNumber,\n            onChange: setValueAccountNumberChange,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divInput,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Amount of money:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.formInput,\n          onSubmit: e => {\n            e.preventDefault();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            placeholder: \"Type a number...\",\n            formNoValidate: true,\n            value: valueMoney,\n            onChange: setValueMoneyChange,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingComponent, {\n        label: loadingLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divButton,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonConfirm,\n          onClick: handlePositiveButtonClick,\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Recharge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.buttonClose,\n        type: \"button\",\n        onClick: onCloseModalClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteIcon,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RechargeModal, \"pAcXZ3ip2y11xsVnVN50cEeU3OY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RechargeModal;\nexport default RechargeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RechargeModal\");","map":{"version":3,"sources":["/home/ngoclong/ReactJS/ELearningHeroku/e-learning/src/components/Account/RechargeModal/RechargeModal.js"],"names":["React","useState","useDispatch","useSelector","Modal","styles","ModalComponent","LoadingComponent","userAction","RechargeModal","props","onCloseModalClick","loadingLabel","token","value","userReducer","isModalShow","setIsModalShow","textModal","setTextModal","typeModal","setTypeModal","isLoading","setIsLoading","accountNumber","setAccountNumber","valueMoney","setValueMoney","dispatch","handleModalComponentCloseClick","setValueAccountNumberChange","event","target","setValueMoneyChange","handlePositiveButtonClick","RECHARGE","response","success","GET_PROFILE","responseGet","message","container","coverT","title","divInput","formInput","e","preventDefault","input","divButton","buttonConfirm","buttonClose","deleteIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Modal from 'react-bootstrap/Modal'\nimport styles from './RechargeModal.module.scss'\nimport ModalComponent from '../ModalComponent/ModalComponent'\nimport LoadingComponent from '../../Loading/LoadingComponent'\nimport deleteIcon from '../../../assets/images/delete.svg'\nimport { userAction } from '../../../redux/actions'\n\nconst RechargeModal = (props) => {\n  const {\n    onCloseModalClick,\n    loadingLabel,\n  } = props\n  const token = useSelector((value) => value?.userReducer?.token)\n  const [isModalShow, setIsModalShow] = useState('')\n  const [textModal, setTextModal] = useState('')\n  const [typeModal, setTypeModal] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [accountNumber, setAccountNumber] = useState('')\n  const [valueMoney, setValueMoney] = useState(0)\n\n  const dispatch = useDispatch()\n  const handleModalComponentCloseClick = () => {\n    setIsModalShow(false)\n  }\n  const setValueAccountNumberChange = (event) => {\n    setAccountNumber(event.target.value)\n  }\n  const setValueMoneyChange = (event) => {\n    setValueMoney(event.target.value)\n  }\n  const handlePositiveButtonClick = () => {\n    setIsLoading(true)\n    dispatch(userAction.RECHARGE({\n      token,\n      value: valueMoney,\n    }, (response) => {\n      if (response.success) {\n        dispatch(userAction.GET_PROFILE({\n          token,\n        }, (responseGet) => {\n          if (responseGet) {\n            setTypeModal('success')\n            setTextModal('Recharge successfully !')\n            setIsModalShow(true)\n            setIsLoading(false)\n          } else {\n            setTypeModal('fail')\n            setTextModal(responseGet.message)\n            setIsModalShow(true)\n            setIsLoading(false)\n          }\n        }))\n      } else {\n        setTypeModal('fail')\n        setTextModal(response.message)\n        setIsModalShow(true)\n        setIsLoading(false)\n      }\n    }))\n  }\n  return (\n    <div className={styles.container}>\n      {isModalShow && <Modal\n        show\n        centered\n        backdrop\n        bsPrefix=\"modal\"\n      >\n        <ModalComponent\n          textModal={textModal}\n          handleModalComponentCloseClick={handleModalComponentCloseClick}\n          type={typeModal}\n        />\n      </Modal>}\n      <div className={styles.coverT}>\n        <p className={styles.title}>Recharge request</p>\n        <div className={styles.divInput}>\n          <p>Account number:  </p>\n          <form\n            className={styles.formInput}\n            onSubmit={(e) => { e.preventDefault() }}\n          >\n            <input\n              className={styles.input}\n              placeholder=\"Your account number...\"\n              formNoValidate\n              value={accountNumber}\n              onChange={setValueAccountNumberChange}\n              type=\"text\"\n            />\n          </form>\n        </div>\n        <div className={styles.divInput}>\n          <p>Amount of money:  </p>\n          <form\n            className={styles.formInput}\n            onSubmit={(e) => { e.preventDefault() }}\n          >\n            <input\n              className={styles.input}\n              placeholder=\"Type a number...\"\n              formNoValidate\n              value={valueMoney}\n              onChange={setValueMoneyChange}\n              type=\"text\"\n            />\n          </form>\n        </div>\n        {isLoading && <LoadingComponent label={loadingLabel} />}\n        {!isLoading && <div className={styles.divButton}>\n\n          <button\n            className={styles.buttonConfirm}\n            onClick={handlePositiveButtonClick}\n            type=\"button\"\n          >\n            <p>Recharge</p>\n          </button>\n        </div>}\n        <button\n          className={styles.buttonClose}\n          type=\"button\"\n          onClick={onCloseModalClick}\n        >\n          <img\n            src={deleteIcon}\n            alt=\"logo\"\n          />\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default RechargeModal\n"]},"metadata":{},"sourceType":"module"}