{"ast":null,"code":"import { userType } from '../types';\nconst initState = {\n  token: '',\n  accountState: 'SignIn',\n  isModalShow: true\n};\n\nconst userReducer = (state = initState, action) => {\n  var _action$payload;\n\n  const data = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data;\n  const {\n    token\n  } = data === null || data === void 0 ? void 0 : data.token;\n  const {\n    accountState,\n    isModalShow\n  } = data;\n  console.tron.log({\n    accountState\n  });\n\n  switch (action.type) {\n    case userType.LOGIN:\n      return { ...state,\n        token\n      };\n\n    case userType.SET_IS_MODAL_SHOW:\n      return { ...state,\n        isModalShow\n      };\n\n    case userType.SET_ACCOUNT_STATE:\n      return { ...state,\n        accountState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/reducers/user.js"],"names":["userType","initState","token","accountState","isModalShow","userReducer","state","action","data","payload","console","tron","log","type","LOGIN","SET_IS_MODAL_SHOW","SET_ACCOUNT_STATE"],"mappings":"AAAA,SAASA,QAAT,QAAyB,UAAzB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,YAAY,EAAE,QAFE;AAGhBC,EAAAA,WAAW,EAAE;AAHG,CAAlB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA+B;AAAA;;AACjD,QAAMC,IAAI,GAAGD,MAAH,aAAGA,MAAH,0CAAGA,MAAM,CAAEE,OAAX,oDAAG,gBAAiBD,IAA9B;AACA,QAAM;AAAEN,IAAAA;AAAF,MAAYM,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEN,KAAxB;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAgCI,IAAtC;AACAE,EAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB;AAAET,IAAAA;AAAF,GAAjB;;AACA,UAAQI,MAAM,CAACM,IAAf;AACE,SAAKb,QAAQ,CAACc,KAAd;AACE,aAAO,EACL,GAAGR,KADE;AACKJ,QAAAA;AADL,OAAP;;AAGF,SAAKF,QAAQ,CAACe,iBAAd;AACE,aAAO,EACL,GAAGT,KADE;AACKF,QAAAA;AADL,OAAP;;AAGF,SAAKJ,QAAQ,CAACgB,iBAAd;AACE,aAAO,EACL,GAAGV,KADE;AACKH,QAAAA;AADL,OAAP;;AAGF;AACE,aAAOG,KAAP;AAdJ;AAgBD,CArBD;;AAsBA,eAAeD,WAAf","sourcesContent":["import { userType } from '../types'\n\nconst initState = {\n  token: '',\n  accountState: 'SignIn',\n  isModalShow: true,\n}\n\nconst userReducer = (state = initState, action) => {\n  const data = action?.payload?.data\n  const { token } = data?.token\n  const { accountState, isModalShow } = data\n  console.tron.log({ accountState })\n  switch (action.type) {\n    case userType.LOGIN:\n      return {\n        ...state, token,\n      }\n    case userType.SET_IS_MODAL_SHOW:\n      return {\n        ...state, isModalShow,\n      }\n    case userType.SET_ACCOUNT_STATE:\n      return {\n        ...state, accountState,\n      }\n    default:\n      return state\n  }\n}\nexport default userReducer\n"]},"metadata":{},"sourceType":"module"}