{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ngoclong/ReactJS/ELearningHeroku/e-learning/src/components/Courses/ConfirmModal/ConfirmModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport styles from './ConfirmModal.module.scss';\nimport ModalComponent from '../../Account/ModalComponent/ModalComponent';\nimport LoadingComponent from '../../Loading/LoadingComponent';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport { coursesAction } from '../../../redux/actions';\n\nconst ConfirmModal = props => {\n  _s();\n\n  const {\n    onCloseModalClick,\n    loadingLabel,\n    titleModal,\n    contentModal,\n    titleNegativeButton,\n    titlePositiveButton,\n    item\n  } = props;\n  const token = useSelector(value => {\n    var _value$userReducer;\n\n    return value === null || value === void 0 ? void 0 : (_value$userReducer = value.userReducer) === null || _value$userReducer === void 0 ? void 0 : _value$userReducer.token;\n  });\n  const [isModalShow, setIsModalShow] = useState('');\n  const [textModal, setTextModal] = useState('');\n  const [typeModal, setTypeModal] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalComponentCloseClick = () => {\n    setIsModalShow(false);\n  };\n\n  const handlePositiveButtonClick = () => {\n    setIsLoading(true);\n    dispatch(coursesAction.PURCHASE({\n      token,\n      arrayCourse: [item]\n    }, response => {\n      if (response.success) {\n        dispatch(coursesAction.GET_MY_COURSE({\n          token\n        }, responseGetMyCourse => {\n          if (responseGetMyCourse.success) {\n            console.log('Get my course success');\n          } else {\n            console.log('Get my course fail');\n          }\n        }));\n        dispatch(coursesAction.GET_ALL_COURSE({}, responseGetMyCourse => {\n          if (responseGetMyCourse.success) {\n            console.log('Get all course success');\n          } else {\n            console.log('Get all course fail');\n          }\n        }));\n        console.log('===============================================');\n        console.log('response purchase now success', response);\n        console.log('===============================================');\n        setTypeModal('success');\n        setTextModal('Purchase successfully !');\n        setIsModalShow(true);\n        setIsLoading(false);\n      } else {\n        setTypeModal('fail');\n        setTextModal(response.message);\n        setIsModalShow(true);\n        setIsLoading(false);\n        console.log('===============================================');\n        console.log('response purchase now fail', response);\n        console.log('===============================================');\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [isModalShow && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      centered: true,\n      backdrop: true,\n      bsPrefix: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(ModalComponent, {\n        textModal: textModal,\n        handleModalComponentCloseClick: handleModalComponentCloseClick,\n        type: typeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coverT,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.title,\n        children: titleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.content,\n        children: contentModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingComponent, {\n        label: loadingLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divButton,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonCancel,\n          onClick: onCloseModalClick,\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: titleNegativeButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonConfirm,\n          onClick: handlePositiveButtonClick,\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: titlePositiveButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.buttonClose,\n        type: \"button\",\n        onClick: onCloseModalClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteIcon,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmModal, \"4FDVgFGMljz0kjmDWLQ64glqGw0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ConfirmModal;\nexport default ConfirmModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmModal\");","map":{"version":3,"sources":["/home/ngoclong/ReactJS/ELearningHeroku/e-learning/src/components/Courses/ConfirmModal/ConfirmModal.js"],"names":["React","useState","useDispatch","useSelector","Modal","styles","ModalComponent","LoadingComponent","coursesAction","ConfirmModal","props","onCloseModalClick","loadingLabel","titleModal","contentModal","titleNegativeButton","titlePositiveButton","item","token","value","userReducer","isModalShow","setIsModalShow","textModal","setTextModal","typeModal","setTypeModal","isLoading","setIsLoading","dispatch","handleModalComponentCloseClick","handlePositiveButtonClick","PURCHASE","arrayCourse","response","success","GET_MY_COURSE","responseGetMyCourse","console","log","GET_ALL_COURSE","message","container","coverT","title","content","divButton","buttonCancel","buttonConfirm","buttonClose","deleteIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Modal from 'react-bootstrap/Modal'\nimport styles from './ConfirmModal.module.scss'\nimport ModalComponent from '../../Account/ModalComponent/ModalComponent'\nimport LoadingComponent from '../../Loading/LoadingComponent'\nimport deleteIcon from '../../../assets/images/delete.svg'\nimport { coursesAction } from '../../../redux/actions'\n\nconst ConfirmModal = (props) => {\n  const {\n    onCloseModalClick,\n    loadingLabel,\n    titleModal,\n    contentModal,\n    titleNegativeButton,\n    titlePositiveButton,\n    item,\n  } = props\n  const token = useSelector((value) => value?.userReducer?.token)\n  const [isModalShow, setIsModalShow] = useState('')\n  const [textModal, setTextModal] = useState('')\n  const [typeModal, setTypeModal] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  const dispatch = useDispatch()\n  const handleModalComponentCloseClick = () => {\n    setIsModalShow(false)\n  }\n  const handlePositiveButtonClick = () => {\n    setIsLoading(true)\n    dispatch(coursesAction.PURCHASE({\n      token,\n      arrayCourse: [item],\n    }, (response) => {\n      if (response.success) {\n        dispatch(coursesAction.GET_MY_COURSE({\n          token,\n        }, (responseGetMyCourse) => {\n          if (responseGetMyCourse.success) {\n            console.log('Get my course success')\n          } else {\n            console.log('Get my course fail')\n          }\n        }))\n        dispatch(coursesAction.GET_ALL_COURSE({\n        }, (responseGetMyCourse) => {\n          if (responseGetMyCourse.success) {\n            console.log('Get all course success')\n          } else {\n            console.log('Get all course fail')\n          }\n        }))\n\n        console.log('===============================================')\n        console.log('response purchase now success', response)\n        console.log('===============================================')\n        setTypeModal('success')\n        setTextModal('Purchase successfully !')\n        setIsModalShow(true)\n        setIsLoading(false)\n      } else {\n        setTypeModal('fail')\n        setTextModal(response.message)\n        setIsModalShow(true)\n        setIsLoading(false)\n        console.log('===============================================')\n        console.log('response purchase now fail', response)\n        console.log('===============================================')\n      }\n    }))\n  }\n  return (\n    <div className={styles.container}>\n      {isModalShow && <Modal\n        show\n        centered\n        backdrop\n        bsPrefix=\"modal\"\n      >\n        <ModalComponent\n          textModal={textModal}\n          handleModalComponentCloseClick={handleModalComponentCloseClick}\n          type={typeModal}\n        />\n      </Modal>}\n      <div className={styles.coverT}>\n        <p className={styles.title}>{titleModal}</p>\n\n        <p className={styles.content}>{contentModal}</p>\n\n        {isLoading && <LoadingComponent label={loadingLabel} />}\n        {!isLoading && <div className={styles.divButton}>\n\n          <button\n            className={styles.buttonCancel}\n            onClick={onCloseModalClick}\n            type=\"button\"\n          >\n            <p>{titleNegativeButton}</p>\n          </button>\n          <button\n            className={styles.buttonConfirm}\n            onClick={handlePositiveButtonClick}\n            type=\"button\"\n          >\n            <p>{titlePositiveButton}</p>\n          </button>\n        </div>}\n        <button\n          className={styles.buttonClose}\n          type=\"button\"\n          onClick={onCloseModalClick}\n        >\n          <img\n            src={deleteIcon}\n            alt=\"logo\"\n          />\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default ConfirmModal\n"]},"metadata":{},"sourceType":"module"}