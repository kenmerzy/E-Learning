{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { adminTypes, coursesTypes } from '../types';\nimport { API_URL } from '../../configs';\nexport default function* adminSagas() {\n  yield takeLatest(adminTypes.CENSOR_COURSES, censorCourses);\n  yield takeLatest(adminTypes.DELETE_COURSES, deleteCourses);\n  yield takeLatest(adminTypes.ADD_CATEGORIES, addCategories);\n}\n\nfunction* censorCourses(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    maKH,\n    token\n  } = data;\n\n  try {\n    var _response$data;\n\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/verify`, {\n      maKH,\n      token\n    }));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.success) {\n      var _response$data2;\n\n      yield put({\n        type: coursesTypes.GET_UNCENSORED_COURSE_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data\n        }\n      });\n    }\n\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}\n\nfunction* deleteCourses(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    maKH,\n    token\n  } = data;\n\n  try {\n    const response = yield call(() => axios.post(`${API_URL}/khoahoc/delete`, {\n      maKH,\n      token\n    }));\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response2;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}\n\nfunction* addCategories(action) {\n  const {\n    data,\n    callback\n  } = action.payload;\n  const {\n    token,\n    tenLoaiKhoaHoc\n  } = data;\n\n  try {\n    var _response$data3;\n\n    const response = yield call(() => axios.post(`${API_URL}/loaikhoahoc/add`, {\n      token,\n      tenLoaiKhoaHoc\n    }));\n\n    if (response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.success) {\n      var _response$data4;\n\n      yield put({\n        type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n        payload: {\n          data: response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data\n        }\n      });\n    }\n\n    callback(response === null || response === void 0 ? void 0 : response.data);\n  } catch (error) {\n    var _error$response3;\n\n    callback(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n  }\n}","map":{"version":3,"sources":["/home/ngoclong/ReactJS/e-learning/src/redux/sagas/admin.js"],"names":["takeLatest","call","put","axios","adminTypes","coursesTypes","API_URL","adminSagas","CENSOR_COURSES","censorCourses","DELETE_COURSES","deleteCourses","ADD_CATEGORIES","addCategories","action","data","callback","payload","maKH","token","response","post","success","type","GET_UNCENSORED_COURSE_SUCCESS","error","tenLoaiKhoaHoc","GET_ALL_CATEGORY_SUCCESS"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { adminTypes, coursesTypes } from '../types'\nimport { API_URL } from '../../configs'\n\nexport default function* adminSagas() {\n  yield takeLatest(adminTypes.CENSOR_COURSES, censorCourses)\n  yield takeLatest(adminTypes.DELETE_COURSES, deleteCourses)\n  yield takeLatest(adminTypes.ADD_CATEGORIES, addCategories)\n}\nfunction* censorCourses(action) {\n  const { data, callback } = action.payload\n  const {\n    maKH,\n    token,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/verify`, {\n        maKH,\n        token,\n      })\n    )\n    if (response?.data?.success) {\n      yield put({\n        type: coursesTypes.GET_UNCENSORED_COURSE_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n    }\n\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* deleteCourses(action) {\n  const { data, callback } = action.payload\n  const {\n    maKH,\n    token,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/khoahoc/delete`, {\n        maKH,\n        token,\n      })\n    )\n\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\nfunction* addCategories(action) {\n  const { data, callback } = action.payload\n  const {\n    token,\n    tenLoaiKhoaHoc,\n  } = data\n  try {\n    const response = yield call(\n      () => axios.post(`${API_URL}/loaikhoahoc/add`, {\n        token,\n        tenLoaiKhoaHoc,\n      })\n    )\n    if (response?.data?.success) {\n      yield put({\n        type: coursesTypes.GET_ALL_CATEGORY_SUCCESS,\n        payload: { data: response?.data?.data },\n      })\n    }\n\n    callback(response?.data)\n  } catch (error) {\n    callback(error?.response?.data)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}